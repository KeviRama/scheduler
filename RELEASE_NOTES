v0.29.1  2018-03-15

No changes to the Scheduler core code, but...

* Allow notes and organisers to be specified on events loaded through
  the YAML recurring events mechanism.


v0.29    2018-03-15

* Add the ability to wrap events.

  It is sometimes necessary to put additional time round an event to
  allow for setting up and clearing away.  This is not part of the actual
  event (as would be listed for instance in a public calendar), but is
  necessary behind the scenes.

  It has always been possible to put in extra events for this purpose,
  but this release adds a new feature to speed the process.  Anyone with
  (at least) permission to sub-edit an event will find an extra link on
  the "Show event" dialogue - "Wrap".

  Clicking this link will produce a fresh dialogue offering the means to
  create two new events - one before and one after.  The new events will
  have descriptive names derived from the original event, and default
  durations which can be set in the system configuration.  Each of
  these can be adjusted and the events can be turned on and off individually.

  The user will also be presented with a list of the resources attached
  to the original event, with tick-boxes to select which should be
  attached also to the wrapping events.  By default, staff and locations
  are carried over, but properties, services, pupils and groups are not.

  Having made appropriate choices, the events are created when the
  user clicks the "Create" button.  Clicking the "Cancel" button will restore
  the previous dialogue.

* Correct processing of approval of cloned events.

  The new facility above makes use of cloning code which was already in
  the system.  In the course of development, it was noticed that the
  existing way of bringing over approvals wasn't quite right.  The
  code simply assumed that any approval previously granted would be
  needed again on the cloned event.

  This isn't quite right, because it might not be the same person doing
  the cloning as the one who originally created the event.  If the
  person doing the cloning is an administrator of a resource then
  permission is not needed, even though the original creator might
  have needed it.  Likewise, if the original event was created by someone
  who didn't need permission, then the code would assume the clone
  didn't need permission either.

  The cloning code now goes through the full evaluation of whether
  permission is needed or not - relative to the user doing the cloning.

* Send immediate e-mails where configured.

  Likewise, the cloning code did not send immediate e-mails about
  resource requests to administrators who had asked for them.  It now
  does.

* Add new journal entry type.

  Cloning an event has always been included in the event's journal.
  This release adds a new journal entry type, identifying events which
  have been created as part of the wrapping process.

* New system settings.

  To support the wrapping process, three new fields have been added
  to the system settings.

    Default set-up duration
    Default clear-up duration
    Default eventcategory for wrapping events

* Improved immediate resource request e-mails.

  The e-mails which are sent to resource administrators who have
  requested immediate e-mail notification (rather than using Scheduler's
  own interface) have been improved with more information about
  the event.

  A button has also been added to the HTML version of the e-mail
  allowing direct navigation to the appropriate approvals page.


v0.28.12 2018-03-08

* Adds quick-add buttons

  When a user first starts creating an event, he or she may be presented
  with a list (administrator configurable) of things to think about adding
  to it - things like parking requirements, or the public calendar.

  Once the event has been created, this list was no longer accessible, because
  it was a check-box list and that doesn't make sense in the context of
  general event editing.

  This release adds a new feature - Quick Add Buttons.  The same list
  of preferred items is used to generate some buttons below the usual
  "Add resource" field.  Clicking on one of these will immediately add
  that resource to the event, without the user having to type its name.

  The list of buttons auto-updates, so if a resource is already attached
  to the event, there is no button to add it again.

* The icon for approving/approved events has been changed from a plus
  sign on a green background to a tick on a green background.  This has
  been done simply by replacing the icon file, so it may take a little
  while to become evident on some browsers due to caching.  A shift-refresh
  will speed the process if desired.

* The feature added in v0.28.9 to allow suitable users to view forms
  let them see all forms - even blank ones.  They are now shown only
  forms which have had some data entered.

* The event editing form has been tightened up slightly (fields moved
  closer together) to make it easier to use on a small screen.  Note that
  on a very small screen, the quick-add buttons mentioned above will
  disappear to save space.

* A real "current" flag has been added to the Property and Service models.
  Previously these had a fake flag which was always set to true.

  This flag controls whether the item is in current use - can be added
  to new events and viewed in the main screen.  Items which pass out of
  use (e.g. staff who have left) stay in the system for the historical
  record, but don't appear in pop-down lists etc.

  The addition of this flag means it is now possible to deprecate old
  properties and/or services if they are no longer needed.  E.g.
  if the Parking service has been merged into Porters, then the current
  flag on Parking can be set to false to prevent anyone adding it to an
  event in future.


v0.28.11 2018-03-06

* Fix listing of event categories.

  Version 0.28.8 added the editing of user concerns, but inadvertantly
  broke the listing of event categories.  Two view helper methods
  with the same name, but marginally different signatures.

  (Incidentally, Rails helpers used to be private to a controller.
   It seems that now they're not - all helpers are shared between
   all controllers.)


v0.28.10 2018-03-02

* No actual code changes - just the README.


v0.28.9 2018-03-02

* Allow more users to view forms.

  Prior to this release, only users involved in the approvals
  process (requester or approver) could view each corresponding
  form.

  This release adds a new user permission bit - can_view_forms.
  If this bit is set - either in the user's profile or in the user's
  own user record - then the user can view any form from the event
  display dialogue.  (Click on an event in the calendar view, then
  click on the form which you want to view.)

* Add extra "Back" button to form view.

  Some of the forms in use are quite long, and the existing "Back" button
  was at the bottom meaning that the user had to scroll down each time
  in order to exit the form.

  An extra "Back" button has been added at top right, to allow forms
  to be viewed and then closed more swiftly.


v0.28.8 2018-03-01

* Greatly improve concern editing by system admin.

  The process for the system administrator to edit users' concerns
  has always been a bit basic.  This release adds proper facilities
  for that.  A system admin can now add, edit and remove concerns
  for users all in one place.
 
* Better listing of concerns when viewing a user.

  In the display of a user, the concerns listing moves to a separate
  tab of its own to facilitate the above change.  The listing now includes
  all the flags from each concern, not just a select few.

* New privilege bit on concerns.

  To reflect usage elsewhere in the system, a new "subedit_any"
  privilege flag has been added to the concern record, matching the
  existing "edit_any" flag.  Users with this bit set on a corresponding
  concern will be able to sub-edit any event involving the corresponding
  resource.

* Correction to ability to change times.

  In a rather odd mis-feature, users with the edit_any flag set for a
  resource could mostly edit the events, but they could change the times
  only if the user was also the owner of a resource (any resource -
  not just the target one).  Just plain wrong - the test has been
  corrected.

* Tidy up appearance of cancel buttons.

  Often a screen will have a "Save" button and a "Cancel" button, and
  behind the scenes the "Cancel" button is really just a link taking
  you back to the page which you were on before.  These looked nearly
  the same, but not quite - the text of the button went white only
  when you hovered over it, whilst the "Save" button had white text
  all the time.  Fixed.

* Spurious debug messages remove.

  Quite a few debug messages - at both the client and server end - have
  been removed.


v0.28.7 2018-02-25

An interim release with a few requested enhancements.

* Re-locate lessons to rooms which appear busy

  It is sometimes necessary for an administrator to effect a lesson
  re-location even though the target room seems to be occupied already.
  E.g. in order to do a round-robin of swaps, or to merge two lessons.

  As of this release, anyone with the "relocate lessons" permission bit
  set will get two lists of rooms in the pop-down menu - first the free
  rooms, then the non-free rooms, clearly highlighted as such.

  Ordinary users re-locating their own lessons will continue to be offered
  only rooms recorded as being free.

* More colours for the concerns down the LHS.

  Each time a user adds a new concern in the column down the left
  hand side of the screen, it is allocated a colour.  Users can change
  the colour but they usually don't.

  The program had a limited list of available colours (14) and once all
  those were in use it created all further concerns with a colour of grey.

  This release adds more colours to the fixed lists, plus a random colour
  generator so that all new concerns will now be allocated distinct colours.

  Some users have a surprising number of concerns (49 in one case!) meaning
  the column extends right off the bottom of their screens, and a large
  number of them are grey.  These can be tidied with the following commands.

  $ cd Work/Coding/scheduler
  $ export RAILS_ENV=production
  $ rake improve_colours:all_users

  This task will go through all the user records, changing any grey concerns
  to a distinct colour.

  It might be worth checking that users know that they can delete concerns.

* Resource administrators to view forms from event dialogue

  A new link has been added to the "show event" pop-up window, allowing
  administrators of resources to jump straight from there to the corresponding
  form.

  To preserve the user's state, the form will open in a new tab.  Clicking
  the "Back" button in the form will close that tab and return the user
  to the previous dialogue.

  This is one of several possible ways of doing it.  Deploying it to see
  how users react.


v0.28.6 2017-12-26

Still tidying up.

* Remove LetsEncrypt directory

  This contained various support files for getting HTTPS certificates
  from Let's Encrypt set up.  The standard tools for Let's Encrypt
  are now much more mature and the use of them is documented in
  the Scheduler Installation Guide at https://xronos.uk/install
  so these are now redundant.

* Make iSAMS database extractor tool fully environment driven.

  The iSAMS database extractor tool has always got some of its settings
  from the program environment, but now it gets all of them this way.

  This has the advantage that neither the program source, nor the
  script for invoking it, needs to be edited to suit a particular site.
  The only configuration needed goes in ~/etc/isauth.

  A new sample isauth file is provided in the support directory.  It
  will need editing before installation as ~/etc/isauth.

  Make sure you install it with no read access for other users
  on your system - "chmod 600 ~/etc/isauth".

* Show Ruby and Rails versions to administrator.

  To provide an easy means for the administrator to check that a
  live installation is running in the right environment with the
  correct versions of Ruby and Rails, the main application screen now
  includes this information for anyone logged in as an administrator.

  Hover your mouse over the software version number at bottom right to
  see the Ruby and Rails versions as well.

  This information is available only to administrators.

  
v0.28.5 2017-12-21

Add more directories to facilitate new installations.

* Previously, users were expected to manually create directories
  under import/isams.  There was a README there saying what was needed
  but the directories weren't.  This release includes these empty
  (except for a .keep file) directories.

* Likewise the directory import/ForMarkbook is created automatically.

* Files whichsystem and isauth in the support directory updated.


v0.28.4 2017-12-19

Further tidying up of installation and demo system.

* Upgrade mysql2 gem to version 0.4.10

  Testing showed that the old version (0.3.16) was incompatible with
  the latest MySQL, as used on Debian 9 systems.  The new one works
  fine with Debian 8.

* Add a pupil to the demo users

  Users of the demo system can now log on as a pupil too.

* Pupil user profile allows event creation

  The default pupil user profile now allows event creation.  This will
  not affect existing systems, only new installations.

* ical feeds require UUIDs by default

  Earlier versions of Scheduler did their ical feeds by element
  number - e.g. /ical/21.  These are small and predictable which
  is potentially insecure.

  The current version expects them to be done by UUID, so things
  like /ical/UUE-937a658f-0ed8-4b44-a78d-faf30f4d520a.  Much harder
  to guess.

  A configuration setting controls whether the old version will still
  work.  This setting now defaults to allowing UUID access only.
  Again, existing systems will not be affected - only new installations.

 
v0.28.3 2017-12-18

* Upgrade to Ruby 2.3.6

  In the spirit of moving on to later versions of things, this release
  updates the application to use Ruby 2.3.6.

  There are no actual code changes - just an environment change
  followed by a lot of testing - but it is slightly more complicated
  to install.

  The usual upgrade process (in the application directory) is:

    * export RAILS_ENV=production
    * Checkout release
    * bundle install
    * rake db:migrate
    * rake assets:precompile
    * touch tmp/restart.txt

  For this one though, we are changing Ruby version, which means a new
  gemset and thus some extra steps.  It's probably best to shut down your
  web server (and the application) entirely for the duration of the
  upgrade.

  The first step is to install the new version of Ruby, and whilst this
  takes a little while, you can do it before shutting down your web
  server.  Log in as you scheduler user and type:

  $ rvm install 2.3.6

  It will probably need to compile from scratch, but it should need
  no further intervention from you.  Once that has completed, stop
  nginx:

  $ sudo systemctl stop nginx

  Then move into your scheduler application directory and do the following:

  $ export RAILS_ENV=production
  $ git pull
  $ cd ..                   \ Important step
  $ cd scheduler            /
  $ gem install bundler
  $ bundle install
  $ rake assets:precompile

  That gets the application basically ready to run, but you need to tell
  various other bits about the new version of Ruby.

  Under ~/.rvm/environments and ~/.rvm/wrappers you will find two
  symbolic links (set up at installation) which point to the right version
  of Ruby to use.  Remove them and set them up again with:

  $ cd ~/.rvm/environments
  $ rm scheduler
  $ ln -s ruby-2.3.6@scheduler scheduler
  $ cd ~/.rvm/wrappers
  $ rm scheduler
  $ ln -s ruby-2.3.6@scheduler scheduler

  Finally you need to tell Passenger (the component which runs Scheduler on
  behalf of Nginx) to use the new Ruby version.

  In your nginx configuration files for the Scheduler installation, change
  the definition of "passenger_ruby" to point to 2.3.6 instead of 2.1.10.

  You should now be in a position to restart Nginx and access your
  installation of Scheduler again.

  $ sudo systemctl start nginx


v0.28.2 2017-12-17

* Fix problem with seeding demonstration database.

  The code for seeding a demonstration database was using a sub-class
  of a Hash to hold default event category settings.  This turned out
  to be incompatible with the way Rails 4.2 handled them.

  Now uses a real Hash.


v0.28.1 2017-12-13

* Upgrade to the latest point release of Rails 4.2

  Continuing on the theme of upgrading the packages on which Scheduler
  depends, this release takes us up to the latest point release of
  the 4.2 series - 4.2.10

* Upgrade jquery-rails to 3.1.4

  Likewise, brought up to latest version.

* Re-work Notifier model.

  The Notifier model was going behind the scenes a bit in ActiveRecord
  with the result that it failed testing after upgrade to Rails 4.2
  Updated to work again.

* Upgrade rails-autocomplete

  An intermittent slightly odd bit of behaviour has been noticed
  in rails-jquery-autocomplete.  It doesn't stop it working, but it
  just looks slightly odd.  Updated to latest version (1.0.3) in
  case that helps.

* Change mailers to use deliver_now

  The Rails ActiveMailer has a function called deliver() which is
  deprecated.  It is replaced by deliver_now() which does the same
  thing.


v0.28   2017-12-11

* Upgrade to latest point release of Rails 4.1

  Pushing the software to GitHub highlighted the fact that the version
  of Rails in use was a little out of date.  The main change in this
  release is to update to the latest point release of Rails 4.1

* Update tests for new data structures.

  The last couple of releases have added new data structures.  The automated
  tests have now been updated to take account of these.

* Remove spurious log messages.

  A couple of unnecessary log messages had been left in the UserProfile
  code.  Removed.

* Tidy repository

  Some unnecessary files had been left in the repository.  These have
  been removed.

* Add README.rdoc

  The application now has a very basic README.rdoc in its root directory.


v0.27.3 2017-12-07

* Sort locations attached to event in ical feed.

  The application has never made any guarantees about the order in
  which locations will be listed for an event.  However, it became
  apparent that events in the ical feed were having their locations
  listed in a completely different order from how they were being displayed
  on screen, which caused confusion.

  This release adds a sort to the ical feed generation so that multiple
  locations attached to an event will now be listed in the order in
  which they were attached to that event.


v0.27.2 2017-12-05

* Simply add a version number to the bottom right of the main screen.


v0.27.1 2017-12-05

* One extra addition to the demo system seed data.  Put "Covered"
  on the cover lesson.


v0.27   2017-12-05

* Addition of user profiles

  The major new feature in this release is the addition of User Profiles.
  Previously each user has had an individual set of permission bits
  and a change in policy for permissions would have required each user
  record to be edited individually.

  The system now has new records called User Profiles, which serve to
  carry a set of permission bits.  Each user is linked to one User Profile
  and inherits the permissions specified there.  In addition, user records
  have their own sets of permission bits which can be used to override
  those in the corresponding profile.  Thus, for instance, a user can be
  linked to the "Staff" User Profile, but have the Admin permission bit
  set in addition.  Overrides can work either way - adding or removing
  a permission bit.

  On upgrading to this release, all user records will be upgraded
  automatically to the new method of working.  All users will have the
  same permissions which they had before, achieved where possible
  by inheriting from their user profile, and otherwise by explicit
  settings on the user record.

  Three User Profiles are created by default:

  Staff - for users who match a Staff record
  Pupil - for users who match a Pupil record
  Guest - for users who don't match any record

  The Staff User Profile has the following permission bits set:

    * Editor (can create events)
    * Add resources
    * Add notes
    * Groups
    * Public groups
    * Find free
    * Add concerns
    * Roam

  which are the same permission bits which staff were given before.
  The Pupil and Guest User Profiles have no permission bits set.

  A member of staff who previously had "admin" and "editor" set
  would now get the editor permission by dint of being linked to the
  Staff User Profile, but would get the "admin" bit set on the individual
  user record, because the profile does not confer that.

  Similarly, a pupil who previously had the "editor" bit set on his
  individual user record would still have it set after the conversion
  process, because otherwise he would not have that permission.

  Changing the permissions on a User Profile will affect all its
  linked users immediately, except those who have an override set
  for the corresponding permission bit.

  More User Profiles can be created, amended and deleted as required by
  a system administrator and the original three can have their permission
  bits amended, but these three can't be renamed or deleted.

* New users link to User Profile records

  As well as existing users being converted as described above, all
  new users logging on to the system will have their user records
  linked to appropriate user profile records.

* Seed data updated to match

  The seed data for new installations have been updated to match the
  new records.

* New demo login method

  A system in demonstration mode now allows direct login by suitably
  configured users, removing the need for a Google login.

* Remove spurious menu item

  Ordinary users were getting an item on their menu called "Day shape".
  It didn't do anything because they didn't have the necessary permissions,
  but it just shouldn't have been there at all.  Removed.


v0.26.4 2017-12-04

* Fix loss of menu on mobile devices.

  A problem was noticed recently in that you could no longer log in
  on mobile devices.  This had been caused by me tidying up the code
  in an earlier release to improve the tightness of the display.

  I missed out one crucial item, resulting in the problem.  Now
  re-instated.


v0.26.3 2017-11-24

* Split "editor" permission flag in three.

  Previously there has been a single flag on the user record indicating
  whether a user has been allowed to create and edit events.

  There are now two more - can_add_resources, and can_add_notes.

  A user with simply the "editor" permission bit can create events, but
  can't choose to add resources to them.  Having created the event, he or
  she is thrown straight back to the event display.  It is assumed that
  the user will be configured with some auto_add resources, typically
  his or her own staff or pupil record (usually pupil).

  The can_add_notes flag controls whether a user can add notes to existing
  events.

  Existing user records which previously had the "editor" bit set will
  be converted to have all three of these set as part of the automated
  upgrade process.

  For new user records, staff will get all three set, whilst pupils will
  by default get none set.

  All new users will now have the auto_add flag set on their own record,
  setting them up to use this mechanism.  This might also help with new
  staff users who tend otherwise to create events with no resources at all
  attached.

* Re-designed listing of event categories.

  The Eventcategories listing page had grown over the years to the point
  where it didn't convey useful information.

  A completely new design has been implemented, which renders the
  information much easier to see.  It's a bit experimental, but as it's
  visible only to administrators it seems a good place to try it out.

  Pagination has been added to cope with having lots of them.

* Selective listing of event categories.

  It is now possible to choose to list only current event categories,
  or only deprecated event categories.

* Corrected count of permissions pending for resource approvers.

  The count shown at the top of the screen for resource approvers included
  all pending requests for the resource, even those where the requester
  had yet to fill in a form.  The count now excludes requests which
  still need a form to be completed, making it more meaningful for the
  resource approver.

  Requests where a form needs to be filled in still appear in the
  requesters count of things which need doing.

  
v0.26.2 2017-11-21

* Adds more detail to the page used for printing request forms.

  Once a user has filled in a form requesting a service it is useful
  for the service provider to be able to print a page for the records.

  This release adds a bit more detail to that page, so they can have
  all the necessary information about the event in one go.


v0.26.1 2017-11-21

Mainly updating the seed data used for new installations and the demo
system, but two very small functional changes for running systems.

* Being a resource administrator and being able to edit forms are two
  separate permission bits.  However, before this release it was
  necessary to have the "form editing" permission bit in order to
  attach a form to a resource.  It is now possible to do it merely
  by being the owner of the resource.  It is thus possible to give
  people permission to use a form, without also letting them edit it.

* A very small bug which couldn't actually arise in a running system,
  but could when setting a system up.  If the prompt text for the
  event creation dialogue was left as nil, then the code for saving
  the system settings raised an unintended exception.  Not a validation
  error - an error in the logic.  Fixed.


v0.26   2017-11-19

This release implements the concept of Busy and Non-busy event categories.

These are needed so that people can have events in their schedules without
the said events causing them to appear busy.  The obvious example is
the standard "Date - other" event category.  It may well be desired to
push such a date into the schedule of various pupils as being noteworthy,
but without it meaning that said pupils are going to miss lessons on that
day.

* Add a busy flag to the Eventcategory record - defaults to true.

* Add code to the Eventcategory editing stuff to allow the flag to
  be edited.

* Enhance Commitment#commitments_during to allow the specification of
  eventcategories to exclude from a search.

* Propagate the previous change up through the call tree.

* Enhance the general clash checking code (the code which puts red dots
  onto lessons) to take account of non-busy events and ignore them.

* Likewise with the code for checking cover clashes.

* Likewise with the code for checking invigilation clashes.

* Make the Freefinder module (used for finding free resources of a given
  type) aware of the flag.  This affects both explicit use of the Freefinder
  (from the top menu) and the allocation of invigilation slots.

* Make the "double booked" code (which puts red boxes around double-booked
  resources) observe the flag.  Non-busy events never cause the red box
  to appear.


v0.25.1 2017-11-17

* Hotfix for exam invigilation modification

  It was discovered that if you set up an exam invigilation cycle with
  the wrong group of invigilators, then changed the default group
  it was not enough to re-generate the events to get the group changed.
  You had to delete all the room records and start again.

  This hotfix ensures that the "regenerate" code does now notice the
  new default group and applies it to all the events.


v0.25   2017-11-12

This release pulls together four separate pre-releases (pre1 to pre4)
plus some final extra changes.

New in this release:

* Rationalise checking of user permissions.

  Various user permissions were being checked in a slightly ad-hoc
  way through the application.  They have all been moved into a single
  module.

* Visitors not to see tentative commitments.

  Visitors to the site (either not logged in, or logged in but unknown)
  can see only events which are flagged as being publicly visible (by
  having a Property with "public" set attached to them).  However, once
  they have sight of such an event, they can click on it to see a limited
  amount of additional information.  This used to include locations for
  which the commitment had not yet been approved.  This release hides
  such locations.  Visitors can see them only after they've been approved.

* Visitors not to see approval status.

  Similarly, when visitors are shown such approved resources, they no
  longer see the approval status - the resource is just there.

* Resource approvers to fill in forms.

  Users who have control of a resource - those who approve the requests
  of others to use them - do not generally need approval themselves.
  However, if said resource has a form attached, it makes sense to give
  even an approver the opportunity to fill it in.

  If a resource approver attaches his or her own resource to an event,
  and if said resource has a form attached, then the request will no
  longer acquire automatic approval.  The approver thus has a chance to
  fill in the form before approving his or her own event.

* Switch to icon status throughout.

  All instances of coloured backgrounds to show resource status have
  been removed.  It's now all done with icons.

* Allow "noted" status from event dialogue.

  The new "noted" status can now be entered by approvers from the
  event dialogue.  Previously it could be done only from the event listing.

* Put styling on all HTML e-mails.

  All the e-mails generated by the UserMailer now have Scheduler styling.

* Remove spurious debug messages.

  The overnight e-mail run to notify approvers about pending requests had
  some spurious debug messages left in.  Now removed.

* Fix bug in handling of permissions for relocations

  A bug was introduced in v0.25-pre2, whereby relocation requests for
  controlled resources (rooms which need approval) skipped the approvals
  process.  This has been fixed in this release.

* Fix count of actions where user has approval without completing form.

  It's just possible that an approver will approve a request even though
  the requester hasn't filled in the form.  In this case, the form should
  not be included in the requester's count of "things to do" because
  he or she no longer has access to it.


v0.25-pre4 2017-11-10

* This time, it really does seem to manage to get the e-mail header
  to look right when viewed in Gmail.


v0.25-pre3 2017-11-08

A couple of tweaks to the CSS on the re-worked e-mails to try to
cope with Gmail.  (Gmail does not pass things through unadulterated,
with the result that things look different inside Gmail from outside.)

* The header has a link to Scheduler.  This is meant to have white text
  and no underline, but in Gmail it gets blue text and an underline.
  Made the selector more specific to try to override Gmail's amendments.

* In the listing of pending approvals, the buttons over on the right
  hand side cascade inwards if their is a short list of individual
  requests for a resource.  Added a "clear" specifier to the parent
  div to try to prevent this.


v0.25-pre2 2017-11-07

Further polishing of the new features.

* Use icons on the event approvals listing.  These will be retro-fitted
  to all the other places where the status of a resource request is listed.

* Addition of "Noted" or "Hold" option for requests.

  It has become apparent that there are circumstances where resource
  administrators need to say, "Noted, tell me more" in relation to a request.
  This can be something as simple as a request for a visitor badge when
  the name of the visitor isn't yet known, or it can be a proposed
  dinner, where approximate details are known, but not yet the final
  version.  It is nonetheless good for catering to receive an initial
  request as early as possible.

  It is now possible for resource administrators to click a "Noted"
  button on a request (along with the existing "Approve" and "Reject")
  which puts responsibility for it back in the requester's court (the
  approver stops getting e-mails).  It is then expected that the
  requester will finish off the details, at which point the request
  will move back to a "Requested" state and the approver will once again
  be prompted to accept or reject it.

  This process can be repeated as often as necessary.  The approver can
  include a message with each "Hold".

  Hold events are journalled as normal, including any reason given.

* The underlying implementation of request statuses has been changed from
  a collection of flags to an enum.  This makes the processing clearer.

* The form responses gain a status field, so it can be seen when the
  form has been partly filled in and the approver is waiting for more
  information.

* E-mails have been re-worked to use a certain amount of formatting,
  and to add buttons allowing users direct access to Scheduler to take
  action on the points being raised.  Not all e-mails have been done yet -
  only those relating to event approval - but they are being pushed out
  to get user feedback.

* Requesters whose requests have been rejected will now get a nightly
  e-mail to prompt them to do something about them.  This is to prevent
  them just sitting in the system for ever.

* The listing of requests for a resource now has additional links.

  * Owner's and Organiser's initials have hover text giving the full name,
    and if clicked on allow the sending of a direct e-mail.

  * Clicking on the name of an event will open the event modal dialogue.

* If a user amends an event from the pop-up dialogue over an event listing
  (either the requester's listing or the approver's listing) then the
  listing will refresh when the dialogue is closed.

* If an event has approved commitments, the normal requester loses the
  ability to re-time the event.  This is to prevent ordinary users making
  casual changes to, for instance, the public calendar.

  Privileged users (e.g. DJD) can still change the timing of the event,
  the idea being that if one wants to change the date/time of a calendar
  event, one e-mails DJD and he does it (if he approves the change).

  The new feature in this release is that should DJD change the timing
  of an event in this way, all the other approvals which it might have
  automatically revert to a "Requested" state, and need to go through
  the approvals process again.  As always, this event is journalled.


v0.25-pre1 2017-10-23

This is a preparatory release to be installed at Abingdon to allow final
polishing of some new features, which are:

* Forms to enable requirements to be specified when requesting resources
  for events.

* Journalling of edits to events.

  All manual edits to events are now journalled.  The journal can be
  viewed by system administrators.

* Configurable prompt message on event creation dialogue.

* Configurable list of highlighted properties and services on event
  creation dialogue.

* Improved menus for event approval and requirement specification.

  The old "Approvals" menu has been replaced by a heirarchy of menus
  whereby a user can see events for which he is responsible, and
  resource approvers can see lists of all events requesting their
  resources.  Approvals can be done from the event dialogue as before,
  or directly from the event listing.  Forms can be viewed and filled
  in from the event listing.

* Active counts of things requiring action for all users.

  All users now get a count of things requiring their attention in their
  top level menu.  As they work down through the menu, the location of
  each item is highlighted by a count on each individual one.  At each
  level, the count on the sub-menus will add up to the count on the
  parent menu.

  Counts are updated automatically when the user does something which
  affects them, or after 10 minutes if someone else does something which
  affects that user.


v0.24.8 2017-10-02

Two small bug fixes relating to the creation of repeating events.

* Limit staff to current staff.

  The YML files defining repeating events identify staff by means of
  their initials.  If a staff member has left and then another member
  of staff arrives with the same initials, the old member of staff
  will tend to be found first, before the new one.

  The selector for finding staff has been changed from:

     Staff.find_by(initials: "...")

  to:

     Staff.current.find_by(initials: "...")

  It thus becomes impossible to define a recurring event involving
  an ex-member of staff, but...

* Delete recurring events on days which now have none at all.

  Although the loader deletes recurring events which have been removed
  from the YAML definition files, a logic error in the code meant that
  it completely ignored days which had no events on them at all.  Thus
  if events were created via YAML files, and then deleted from those
  files leaving no events at all on that particular day, the events
  in the database never got deleted.

  The loader now processes *all* days, regardless of whether the
  files define any events on those days.


v0.24.7 2017-10-01

* Include room information in meetings coming from iSAMS.

  It has been pointed out that the importer taking data from iSAMS
  installations was not bringing over room information.  I must
  have just missed the fact that it was there in the meeting records
  when I implemented it.  This release corrects that ommission and
  meetings now get their rooms.

  iSAMS produces one meeting record per person at the meeting, each
  with all the other meeting information duplicated.  Scheduler merges
  all of these into a single event, and will take the room information
  from any record which has it.  In practice iSAMS seems to include
  the room information in all the records of a meeting, or none of them.


v0.24.6 2017-10-01

* Merge lessons coming from iSAMS with more than one teacher.

  iSAMS can't cope with lessons which have more than one teacher.
  (SchoolBase has exactly the same limitation.)  In practice, lessons
  with more than one teacher do occur.  The best you can do in iSAMS
  is to make multiple simultaneous lessons with all the same information
  apart from the teacher.  On detecting an instance of this, the
  Scheduler importer will then merge them back into the single event
  which they in fact are.  The test is:

    Same timing
    Same group of pupils
    Same lesson name
    Same room

  Apart from thus recording what is happening more accurately, this has
  the knock-on advantage that you don't then get an apparent clash for
  pupils who have two apparent lessons simultaneously.

* Assign cover to merged lessons correctly.

  When storing cover information, iSAMS records who is doing the cover,
  but not who is being covered.  It can get away with this because of
  its assumption that there is only one teacher for a lesson.  It knows
  which lesson is being covered, and therefore infers which teacher it
  must be.

  Once multiple records for the same lesson have been merged as described
  above, this assumption no longer holds.  The importer therefore keeps
  track of all the original part-lessons which have been merged, and thus
  assigns covers to the correct covered teacher.


v0.24.5 2017-09-12

* Add in file accidentally missed from the last release.

  A file - lib/import/misimport/miscover.rb - was accidentally missed
  out from the last release, which caused covers to stop flowing from
  iSAMS to Scheduler.  This release simply includes the update version
  of that file which should have been in the last release package.


v0.24.4 2017-09-05

* Allow re-location to be done more than once in the same dialogue
  session.

  Once a lesson had been re-located, the re-locate link disappeared.
  This release re-instates it.

* Remove spurious debug message.

  A debug message was accidentally left in the last release.


v0.24.3 2017-09-05

* Group re-located lessons using a new property.

  In v0.23, a new facility was added whereby individual lessons could
  be relocated by users into different classrooms.  This release
  adds a new property - "Re-located" - which will automatically be
  added to all lessons so re-located.  It is then possible to view
  them or report on them as required.

* Make sure lessons can be re-located after editing.

  It's not a normal workflow, but there was a small bug in the
  re-location code.  If a user first edited an event, and then went
  back to the display screen, the re-location link no longer worked.
  It was necessary to close the dialogue and re-open it in order to
  do a re-location.  This bug has been fixed.

* Reports now understand covers/re-location

  The reporting code used to list cover staff and lesson re-locations
  simply as more resources on the event, without indicating their special
  status.  It now displays staff covers as "ABC (covering DEF)" and room
  re-locations as "G112 (normally G111)".

* The seed data for a new system has been enhanced to add the "Covered"
  and "Re-located" properties.


v0.24.2 2017-08-27

No changes to the application itself - just to the data importer.

* Cope with new staff not fully set up in iSAMS.

  One new member of staff had not been fully set up in iSAMS but
  nonetheless had been used as a form tutor, which caused the import
  utility to trip up.  Now copes with this situation.

* Cope with week letters missing from iSAMS.

  For schools with a two week timetable, iSAMS holds a record of
  which calendar week gets which of the two weekly timetables.  The
  importer uses this information to populate individual schedules.

  If that information is missing from iSAMS, the importer will now
  look at Scheduler's own database for events in the "Week letter"
  category, and if found will use that information instead.


v0.24.1 2017-08-25

* Fix to handling of conversion from timed to all-day

  The previous release introduced a change to edge-cases when converting
  existing events from being timed to being all-day.  Unfortunately the
  same change introduced a bug in the creation of new all-day events -
  they all ended up one day short.  This release fixes that bug.


v0.24   2017-08-07

* Configurable properties to show to new users

  When a new user registers on the system, the practice to date has been
  to include automatically all public calendars on the system as his or
  her immediate concerns.  For students (who can't add or delete concerns)
  this then becomes their fixed list of concerns.

  This release adds a little more flexibility, in that each Property
  within the system acquires two flags, controlling whether that Property
  will be included as an automatic concern for new staff or pupil users.

  It is thus possible to have a calendar which is not public, but is
  automatically shown to all new staff users, and not pupils (or vice
  versa).

  When this release is installed, all existing public calendars will
  get both these bits set, and from then on the system admin can set
  them as required.

* Correct display of edge case of timed multi-day events.

  If a timed multi-day event began at a time other than midnight and ended
  at exactly midnight, it was displayed as one day too long.  Now
  corrected.

* Improved handling of conversion to/from timed/all-day events.

  When a user changes an event from being timed to being all-day, or
  from being all-day to being timed, the default behaviour is now
  less surprising.

* New support file - setupmysql

  A new file has been added to the support area to help in the
  creation of MySql databases in a new installation.

* Import of iCal files

  Early versions of Scheduler included the means to import a set of
  calendar data from an old calendaring program which exported them
  as a CSV file.  Since the old calendaring program has gone away
  (its maker ceased trading a long time ago) this facility was disabled
  a while back.

  In this release, a similar facility is added in which allows the
  import of iCal files from Google Calendar.  It is thus possible to
  move over a whole existing school calendar from Google Calendar,
  allocating it an event category + property and getting it into
  Scheduler.

  Note that this is intended to be done on a one-off basis.  It
  includes no means to do an in-place update of such events.  If it's
  run a second time then all the events brought in in the first run
  will be deleted and re-created, losing any edits done to them
  subsequently.

  The facility is available only to the system administrator.


v0.23   2017-07-31

* Room covers (or lesson relocation)

  There are two common scenarios where a lesson needs to be re-located.

  1. The teacher wants to move to an ICT room or other specialized location.
  2. A lesson needs to be moved from its normal room to free that room
     up for another function.

  This release adds provision for users to make such relocations quickly
  and easily, and automatically prevents them choosing a room which isn't
  free.

  Lessons can be re-located by the teacher of the lesson, or by a
  specially privileged user of the system.  An extra privilege bit
  has been added to the user record for this purpose.

  To relocate a lesson, click on the lesson in the normal display,
  and then on the "Re-locate lesson" link.  This link appears only
  for users with the appropriate authority as described above.

  After a short delay (1-2 seconds) a pop-down menu is populated with
  a list of all the rooms which are free at the required time.  Selecting
  one and clicking OK will cause the lesson to be relocated.

  If the selected room requires approval, the usual process will be
  enforced, including e-mails if the administrator of the room has
  requested them.

  The same dialogue can be used to remove a re-location and revert the
  lesson to its original room.

  The mechanism implementing this behind the scenes is exactly the same
  as that used for cover for teachers, although it may not be immediately
  apparent to end users that they're really the same thing.

  The system adminstrator should set up a two-tier layer of groups
  to indicate which rooms can be used for cover.  Typically something
  like this:

  Cover Rooms ->  Able Building  -> A11
                                    A12
                                    A13
                  Baker Building -> B11
                                    B12
                                    B13
                  ICT rooms      -> ICT-A
                                    ICT-B

  A group of groups of rooms.  Once the "Cover Rooms" group exists, it
  can be configured for this purpose in the system settings.  Until that
  configuration is done, the "Re-locate lesson" link will not appear for
  any user.


v0.22.2 2017-07-31

* In the area of pre-formatted iCal feed URLs.

  For people (staff and pupils) a variety of feed options are offered,
  but for other elements there was just one.  This release changes that
  to two - one with breakthrough events and one without.  It's
  conceivable that either might be required by end users.


v0.22.1 2017-07-31

  Two small fixes

* Further fix to the auto-update of the pending requests count.  It turned
  out the permission checking was wrong, meaning that although the
  feature worked, it worked only for admin users.  Now corrected so that
  it will work for anyone.

* The consistency check in the Commitment model was slightly wrong, in that
  any time a Commitment record was validated, it caused the corresponding
  Event and Element records to be validated too.  This was caused by a
  misunderstanding about the meaning of the declaration of the relationship
  between the two.  There is no reason for the Commitment model to be
  attempting to validate the other two, so the relevant declaration has
  been removed.


v0.22   2017-07-25

* Issue a warning for events with no resources

  The most common mistake which new users make is to create an event
  but give it no resources at all.  They are then puzzled as to why
  no-one can see it.

  The system will now display a large warning message as soon as they
  save an event with no resources.

* Warn if rooms or people are double-booked.

  Similarly, the system now checks whilst a user is adding resources
  to an event, and highlights any people or locations which are explicitly
  double-booked.  That is - have a direct commitment to an overlapping
  event.

  This feature won't pick up indirect commitments - via a group - so
  it won't tell you if the student you want is in a lesson.  This is
  too computationally expensive to perform on the fly, but the existing
  flagging of clashes should pick these up and put a red dot on the
  lessons.

  The main purpose of this is to point out to people that the ICT room
  (or whatever) which they've attempted to book is already booked
  by someone else.


v0.21   2017-07-21

* Provide ical feeds by UUID

  Originally, ical feeds were specified by staff initials, then later by
  element ID allowing feeds to be taken for any element, not just staff.
  This is slightly insecure in that element IDs are allocated sequentially,
  so any reasonably small integer would result in some sort of feed
  although it was impossible to predict what you'd get.

  This release adds a random UUID to each element record and ical feeds
  can now be requested by UUID as well.  For security, the system administrator
  can choose to turn off the previous methods, meaning only the UUID one
  will work.  Guessing a UUID is pretty much impossible.

* Pre-formatted ical feed URLs.

  Since UUIDs are long and potentially very boring to type, the system
  now also provides pre-formatted feed URLs which can be copied to the
  user's clipboard and then pasted into whatever calendar program is in
  use.  These will be found on each element's "Concern" page - accessed
  by clicking on one of the coloured boxes down the left hand side of
  the page.

  Several different URLs are provided for each item, allowing them to get
  all their events in one go, or split out such things as cover and
  invigilation.  This means they can choose to display these items in
  a different colour from their normal events.

  Additional system settings have been provided to allow the system
  adminstrator to set the base URL to use, and whether the URLs should
  begin "http:" or "https:".

* Split concerns page into tabs.

  With the addition of the URLs to the existing page about each Concern,
  the length of the page became excessive.  It has been split into several
  tabs to make it easier to use.


v0.20.6 2017-06-30

* Display staff initials on invigilation (and other) events.

  At the request of Abingdon School, it is now possible to switch
  on the display of staff initials for events in the main calendar
  display.  This is done on a per-concern basis and defaults to off.

  Note that it will display only staff directly connected to the event.
  Staff indirectly connected by way of a group membership will not
  be included (far too computationally expensive).
  
  The primary function is to enable a quick view of who is doing
  each invigilation slot, but it may also be of use to students wanting
  to see who is teaching each lesson.

  To switch on, click on the relevant concern in your left hand column
  and tick the "List teachers" box.  You can also set it to default to
  on by clicking on your user name (top right) and ticking the box
  there.  Any new concerns you create will then have the box pre-ticked.

* Fix to auto-update of pending requests count.

  The URL used to auto-update a user's pending request count was slightly
  wrong, meaning it worked only if the user was on the main screen.
  This has now been corrected so it will work anywhere.

* Fix to testing environment.

  The request notification code implemented in the previous release had
  an edge case which cannot arise in the development or production
  environments but can be triggered in the test environment where things
  are potentially done out of sequence.  Specifically - attempting to
  update an event without first starting to edit it.  This led to one
  test failing.  The code has been fixed so the test no longer fails.


v0.20.5 2017-06-21

* Add reply-to to invigilation e-mails.

  The system generates e-mails to warn people when they have invigilation
  slots.  Some users reply to these without thinking, which has no useful
  result if it goes to the system.

  Added a reply-to field so that such replies will go to a real person.


v0.20.4 2017-06-20

* Notify impatient users of request cancellations.

  Some time ago a facility was added whereby users who control resources
  could request instant e-mails each time someone put in a request for
  that resource.  It's an opt-in facility, controlled by a flag in
  the user record.

  This release adds the means to notify the same users if a pending
  request is cancelled - either because the requester deletes the
  individual request, or because the whole corresponding event has
  been deleted.  Note that this happens only for requests which have
  not yet been approved.

  It is controlled by the same flag in the user record, so you can't
  choose to have one and not the other.

  Note that the notification e-mails are sent out only at the end of
  an event-editing session.  A user can add and remove the same resource
  as often as he likes during one edit and no e-mails will be sent.
  Only when the user clicks "Update" does the system send either
  kind of e-mail.

* Update pending request count in the main screen.

  Resource administrators get a count of outstanding requests, "(4)"
  and the like in their top menu bar.  Until now, this was updated
  each time they interacted with the application, but not otherwise.

  This release adds a 5 minute update.  Every 5 minutes the front end
  polls the back end to see if the count has changed, and if it has then
  it updates the display.


v0.20.3 2017-06-16

* Remove date/time from heading in invigilation notification e-mail.

  It was unnecessary and confusing.  Removed.


v0.20.2 2017-06-09

* Add an indicator of the time.

  A long-standing request that turns out now to be very easy.
  Add a little red line showing the current time.


v0.20.1 2017-06-07

* Fix settings dialogue.

  A small error was discovered which got into the system at v0.19.
  It prevented the system administrator from accessing the global
  system settings dialogue.  This release fixes that problem.

  
v0.20   2017-06-06

* This release implements filters in the main schedule display.

  Users can now choose to reduce what they see by filtering out events
  by event category.  If they have any filter in effect then a red marker
  appears at top left to remind them that it is on.

  Administrators can also add in event categories which would not
  otherwise be visible - those with the visible flag not set.  In a
  default installation this is just the "Hidden" event category.
  This can be useful in order to track down inivisible events belonging
  to another user.

* The sort order for multiple events at the same time has been improved.

  Prior to the last release, concurrent events were displayed in alphabetical
  order.  In the last release this was changed to have them displayed in
  order of the relevant resource.  Now both are used - they are sorted
  first by resource and then alphabetically.


v0.19   2017-05-22

* The main change in this release is that the version of FullCalendar
  used has been updated to the latest available - 3.4.0.  Previously
  Scheduler was using 2.0.2.  This has enabled various other enhancements.

* When events are being viewed for multiple resources, the left-to-right
  ordering has historically been by alphabetical ordering of event title.
  This can lead to a less than clear display.  From this release, the
  left to right ordering is dictated by the resource involved, so resource
  A's events will always be to the left of resource B's events, etc.

* It is now possible for the system adminstrator to enter period times in
  the system and for these then to be displayed to individual users as
  background events (pale shaded areas) on the display.  More than one
  set can be entered (e.g. for a main school and a junior school) and
  each user can choose which to see.

* If a user has period times switched on and the user then tries to
  create a new event within a configured period - either by clicking
  within a period or by dragging a resource onto the calendar - then
  the default times for the new event will now default to the period's
  times.  Clicking and dragging to create a new event with duration is
  not affected and will continue to work as before.

* The framing of the calendar has been tightened up and the user should
  no longer find that there are two simultaneous scroll bars.  The calendar
  resizes as far as it can to fit the user's chosen window size.

* A new view is available in the calendar display.  Called simply "list"
  it provides a nicely formatted list of all the chosen events in a month.

* The automated test suite for the application had fallen rather behind
  developments.  It has been updated and now runs without error.


v0.18.6 2017-04-09

  Two small fixes

* Handle duplicate staff initials in ical feed.

  It is possible to request an ical feed for a member of staff by
  specifying either the staff member's element ID (the preferred
  way) or for reverse compatibility with an earlier implementation,
  by specifying the staff member's initials.  The latter failed
  if the school configured two members of staff with the same initials.
  The system would always pick the first such member of staff, which
  generally would be someone who had left.

  The database query has been enhanced to specify "current: true"
  in addition to the existing criteria, so as to pick the later
  member of staff.

  This has the side effect that it is no longer possible to get an
  ical feed for an ex-member of staff by means of his or her initials.
  If you really need that, then use the element ID.

* Re-position invigilation flag in some views

  When handling invigilation slots, the system shows the status of
  each slot with a little red/yellow/green flag.  In some views this
  ended up in a less than ideal place.

  This release adds view-specific code to position the flag to be
  visible in each view, and as far as possible, not to cover up other
  information.


v0.18.5 2017-04-30

  Still drawing together strands and tidying up.

* Update the seed data used for new installations and the demo system
  adding items to enable the demonstration of the full facilities
  of resource requests.

* A new flag on the reporting page allows control of whether or
  not entries should end with a full stop.

  When the legacy calendar data were imported into Scheduler in its
  first school, the entries were rather a mess.  Some had a full stop,
  some didn't, and at least one ended in "  ."  (Two spaces and then
  a full stop.)  To produce a consistent report for printing, the
  reporting code massaged all the entries to end in a single correctly
  positioned full stop.

  Now Scheduler is in use in another school, and they would prefer
  not to have the full stop, so it's now a configurable item on
  the report generation page.  Once you've made a choice it will
  be remembered and used by default on subsequent runs.


v0.18.4 2017-04-30

  Quite a bit of code tidying has been done in this release to
  facilitate the imminent migration to the latest version of
  FullCalendar.

  Code for preparing events and sending them to FullCalendar in
  the front end used to be spread between the Event model and the
  Events controller.  It has now all been moved to a Service Object
  and unified.  The number of entrypoints in the JavaScript module
  which drives FullCalendar has been greatly reduced, and the code
  has been simplified.

  Actual changes visible to the end user are:

* When a resource attached to an event requires approval, it is also
  possible for the resource administrator to set up what is called
  a Prompt Note.  This prompts the end user to provide additional
  information relating to the request - e.g. ancillary information
  about catering.  In previous releases, the software did not
  always set this up correctly.  Provided the user simply added the
  resource to an event then all was well, but if the user dragged the
  resource onto the calendar, or set up the resource to auto-add to
  new events then the note did not get added.  It now gets added in
  all circumstances.

* Such notes are now visible only to the requester and the resource
  administrator unless the requester chooses to make them more
  generally visible.

* Scheduler allows the user to set up two kinds of events - timed
  events and all-day events.  All-day events appear across the top of
  the display and last an integer number of days.  Timed events appear
  in the main area of the display and have a specific start and end time.

  It is possible to enter a timed event which lasts more than one day.
  E.g. starting at 08:30 on Monday 1st, and running to 16:30 on
  Tuesday 9th.  Until now this resulted in a vertical coloured block
  running through every day's display for that period.  More than a
  couple of these made the display look very messy.  This has not been
  a problem at Abingdon because multi-day events have always been
  entered without times (or perhaps, users learned to do that to keep
  the display clean).

  At Dean Close school however, it is desired to put the events in with
  times, and so Scheduler's display code has been made a little more
  intelligent.  Where a timed event lasts more than one day it will be
  displayed in the all-day section of FullCalendar's display (at the
  top) but with the start time pre-pended to the first part of
  the event's display.  Thus for the example above, the event would
  appear as running from Monday to Saturday in the first week, with
  "(08:30) " before its name, and then from Sunday to Tuesday in
  the second week, without the extra time field.


v0.18.3 2017-04-27

  Another two tiny fixes to problems which became apparent during
  testing of currently ongoing development work.

* When a user is creating an event, the date/time fields provide
  a pop-up box allowing the information to be entered by means of
  clicks etc.  (Or the date/time can be entered simply by typing text.)

  When editing an existing event the same facility should be available
  but wasn't.  This release re-instates that missing functionality.

* It is possible that a user will try to add a concern to the left
  hand column even though the relevant item is already there but
  un-ticked.  In this circumstance the natural thing for the program to
  do is simply to tick the existing item and update the display.

  This is what it now does.


v0.18.2 2017-04-26

* A hotfix to a typo in the UserMailer object.

  All attempts to confirm requests for resources were failing because
  of a typo (missing letter) in the user mailer.  This release corrects
  that problem.


v0.18.1 2017-04-22

  Some more tidying up following on from yesterday's big tidy up.
  The tidier things get, the more obvious the remaining items become.

* Each installation needs its own secret key for securing the sessions
  between browser and server.  This is a long pseudo-random hex string
  generated using the command "rake secret" in the application's root
  directory.

  Up until now, each installation has had its unique secret edited into
  the file config/secrets.yml, which is the wrong way to do it.

  From this release, the secret goes in ~/.profile, and the config/secrets.yml
  file picks it up from the environment, meaning that the same file
  can be used on all installations.  This is how it should always have been
  done.

* The file utils/checkclashesahead existed in a slightly different
  (corrected) form on Abingdon's installation but not in the main
  repository.  Pulled back into the main repository.

* Likewise the file lib/import/school/permitted_overloads.rb on
  Abingdon's installation differed from the main repository.  Pulled
  back in.


v0.18   2017-04-21

* Improved the iSAMS data import code to cope with more than one school.

  The original implementation of Scheduler imported timetable data
  from a single-school MIS called Schola.  It did this by taking
  all the individual staff and pupil timetables and from them
  reconstructing the complete timetable and set lists.

  The next implementation imported data from SchoolBase by means of
  direct access to SchoolBase's database tables.  This version of
  the importer still exists, but it's a single large (5100 line)
  Ruby program.  It would need tweaking to work for a different school.

  The next requirement was to import timetables from iSAMS and the
  opportunity was taken to re-write the importer as a modular
  implementation.  It now consists of 41 separate Ruby source
  files plus a few specific to each school each of which does
  a separate specific task.  They are split into three hierarchical
  groups in separate directories:

    * General code regardless of MIS (18 source files)
    * iSAMS-specific code (23 source files)
    * School specific code (varies - 3 - 7 files)

  There remains the task of taking the SchoolBase importer mentioned
  above and adding it in to this new structured implementation.

  Although the code above was always intended to work with more than
  one school, the acid test came when it was time to install it at
  its second school.  Overall the results were good, but a small
  amount of cleaning up was required.  Some code was in the iSAMS
  area which should have been in the School area, and a false
  assumption (that the three-letter abbreviation of Thursday is
  always "Thu") came to light.

  This release pulls together all the tweaks into a version which has
  been tested to work well at both the current iSAMS-using schools.

  When doing a new installation, or installing this release for the
  first time, it is necessary to go into the directory:

  ~/Work/Coding/scheduler/lib/import/school

  and type "./linkup <School name>" in order to pick the right
  school-specific code files.


v0.17.5 2017-04-14

* And do exactly the same for the LetsEncrypt config files


v0.17.4 2017-04-14

* Ignore the LetsEncrypt log files

  Continuing the theme of tidying things up, the only thing which
  changes here is the .gitignore file.  It now specifies that the
  contents of the directory LetsEncrypt/logs should be ignored, although
  the directory itself should be kept.


v0.17.3 2017-04-14

A bit of a drawing together of a few loose strands.

* Don't complain about inconsistent data from the iSAMS database.

  It's becoming steadily more apparent that the iSAMS database lacks
  basic consistency constraints.  We're getting membership records
  for pupils which are apparently currently active, even though the
  corresponding groups are currently inactive.  Stop complaining
  about them.

* In the course of testing the above, an instance of a hard coded
  path was found in the script which invokes the import process.
  An appropriate environment variable already exists, so the script
  was amended to test for it and then use it.

* The seed data used for setting up new systems and the demo system
  has been enhanced to include information relevant to invigilation.
  For the demo system, a period of suspended lessons is created to
  allow the feature to be demonstrated.


v0.17.2 2017-04-10

* Add the means to edit the number of invigilators per room.

  Previously one set a default number of invigilators for an exam
  cycle and this propagated to all the invigilation slots.  Each slot
  could then be amended individually, but there was no way to do it
  for all the slots in a room.

  It is now possible to set a default for the exam cycle, which will
  be copied as the default for each new room record but can be amended
  in the course of creating the room record, or later.

  If the number for a room is altered after the actual invigilation
  events have been generated then a re-generation of the events will
  alter the individual invigilation event records provided:

    1. The individual record has no invigilators allocated
    2. The individual record has not been set to 0.

  The idea is to preserve information which has been actively entered,
  whilst allowing bulk changes where possible.

* Fix a bug whereby events which were moved did not change name.

  In the original implementation, all invigilation events were called
  simply "Invigilation".  This was later changed to "<Room no> Invigilation".
  Thus one would have, for instance, "M116 Invigilation", the idea
  being to make it really obvious to the end user where he or she
  was meant to be.

  If however a set of invigilations were moved to a new room, the
  name did not change.  The event would continue to be called
  "M116 Invigilation" even though it was now in M115.  This release
  fixes that problem.


v0.17.1 2017-04-06

* Add the means to check for events clashing with invigilation slots.

  These can arise either because the exams administrator has over
  ridden the list of free staff being offered, or because other
  events have been added since the invigilation slots were populated.

  The report can be displayed on screen, or e-mailed users flagged as
  being exam adminstrators.  The latter can be done automatically as
  part of the overnight processing.

* Exam processing has been renamed as Invigilation processing, since
  that's what it actually deals with.  As a result, the documentation
  is now at:

    https://xronos.uk/invigilation.html


v0.17   2017-03-22

* This release implements a major new feature - exam invigilation.

  For details on how to use it, see the on-line documentation at:

    https://xronos.uk/exams.html

  When installing this version, it is necessary to migrate the
  database (rake db:migrate) re-compile the assets (rake assets:precompile)
  restart the application, and then edit the system settings to add
  the system's domain name and source e-mail address.


v0.16.1 2017-02-27

There are no code changes in this release, just a change to this
release notes file and the version number.  One item got missed
from yesterday's release notes file.

* Re-check user records at login to see if they match a known person.

  Up until this release, when the system encountered a new user logging
  on it checked to see if the user's e-mail address matched that of a
  staff member or a pupil.  If it did then the two were linked and the
  user was treated as a proper user.  Otherwise it was treated much the
  same as if it wasn't logged on at all.

  A problem arose from this, in that it could happen that a user logged
  on before the corresponding staff or pupil record had been created.
  The user record would be created without a link, and would be treated
  ever after as a guest.  It was necessary to delete the user record
  and let it be created again in order to establish the link.

  As of this release, guest users are checked every time they log in to
  see whether a matching staff or pupil record has sprung into existence.
  If it has, then the two are linked, and the user changes status from
  being a guest to being a proper user.


v0.16   2017-02-26

* Adds support for creating a new installation from scratch.  After
  initialising an empty database, seed data will provide the minimal
  records needed to get going.

* Allow multiple public calendars.
  Previous versions assume that just the calendar called "Calendar" is to
  be public.  This worked fine at Abingdon School, but Dean Close School
  want three public calendars - main school, prep school and pre-prep
  school.  The system now allows an arbitrary number of public
  calendars, and which ones are public is controlled by a flag on the
  relevant property.

  If an installation has 0 or 1 public calendars then the display shown
  to non-logged-on users will be exactly the same as before.  If there
  are 2 or more public calendars then even users who aren't logged on
  will get a column down the left hand side where they can pick which ones
  they want to see.  They still can't add or remove anything from this
  list, but they can switch them off and on.

* The login method to be used is now configurable.
  There is a new item under the Settings menu allowing different kinds
  of login to be used.  The default remains "Google login" which was
  the only one before.  The only new one which has been implemented
  is "Demo mode", which allows anyone with a Google account to log in.
  This is used on the demonstration system.

* It is now possible to choose a preferred colour for the public
  calendar(s), instead of it/them always being green.


v0.15.4 2017-02-15

* Remove spurious column in user panel at LHS.


v0.15.3 2017-01-18

* Allow recurring events to be specified on the first Wednesday, second
  Thursday, last Friday etc. of a month.  Also allow events to be specified
  outside term time.

  For full info, see import/recurring/README


v0.15.2 2017-01-09

* Improve diagnostics when parsing recurring event files.

  One of the diagnostic messages produced when an error was found in
  a recurring events file was difficult to understand when taken in
  isolation.  This release improves the wording to make it clearer.


v0.15.1 2017-01-05

* Fix suspension status of assembly shared between year groups.

  The code to suspend lessons based on the suspension records in the database
  was looking at only the first group of pupils attached to the event.
  This was fine for lessons (where there is just the one group) but
  produced a slightly erroneous result for assemblies.  The obvious
  example was the 4th + 5th year assembly on 16th January, which was
  suspended because of the 5th year mocks.

  The code now checks *all* the groups attached to the event and suspends
  the event only if all the affected year groups have a suspension record.


v0.15   2016-12-22

* Show membership records for groups.

  The membership of groups has got quite interesting, in that iSAMS makes
  an attempt to handle the duration of memberships for activity groups
  (but not other groups).  Unfortunately, it throws away historical
  information so a certain amount of caution is needed in the data import.

  To enable a clearer view of what exactly is going on, element display
  for groups now shows not just the current and historical members, but
  also all the individual membership records (on a separate tab) so one
  can see the detail of what is going on.  Some OH groups now have
  *future* members - members who will be in the group when the new term
  starts.

  This has involved a complete re-work and simplification of all the
  panels in the element display screens.

* Clash checking has been enhanced in two ways.

  1) The events to be checked are now driven by a flag on the
     eventcategory record, where previously they were hard-coded to
     be Lesson and Other Half events.

  2) Suspended (non-existent) events are not clash-checked, but it
     was possible for an event to be clash-checked - and acquire
     a note and flag - and then later to be suspended.  The code will
     now spot such an event and remove the note/flag and the next clash
     checking run.

* It has become apparent that the iSAMS database can become inconsistent
  in the area of cover records.  Currently it contains nearly 300 cover
  records with no corresponding lessons.  The importer now reports
  merely a count of such records rather than logging each one individually.
  (If you want them logged individually, remove the --quiet switch from
  the invocation of the utility.)

* An error has been fixed in the area of Other Half groups which were
  loaded from iSAMS with an end date already in place.  On the appropriate
  date (the day after the indicated end date) the groups should have been
  marked as no longer current in Scheduler.  This was not happening and
  the loader has been corrected so now it does.


v0.14.1 2016-12-13

* Gnashum, frashum, Dick Dasterdly.  One little unwanted <br> snuck through.


v0.14   2016-12-13

* Add a multicover flag to staff records.

  Under certain circumstances, one wants to be able to assign the same
  person (possibly not a real person) to do more than one cover at the
  time, or do to a cover when apparently involved in something else.

  This release adds a multicover flag to the staff record.  Anyone
  with this flag set will not generate warnings if over-committed for
  cover.

* Updated permitted_overloads.rb

  The permitted_overloads.rb file in the system was heavily out of
  date and thus ineffectual.  This new one does more useful work.


v0.13.2 2016-12-01

* Correction to previous release.

  The previous release was checking the value of the active for each
  member of staff as calculated by the loader.  It should have been using
  the value stored in the database.  It is possible for the former to
  be false and the latter to be true (but not the other way around) as
  indeed does happen when a member of staff doesn't really exist but
  needs to be covered.  This is used for setting up Invigilation.


v0.13.1 2016-11-30

* Add an extra check on cover of inactive staff.

  iSAMS doesn't really understand the concept of invigilation, so it's
  been done by setting up dummy lessons with dummy members of staff and
  then arranging cover for them.  The dummy members of staff weren't
  active, which caused the cover importer to trip over the relevant
  records.

  Said members of staff now are flagged as active, but this release
  fixes the importer so it won't have the same problem in future.


v0.13   2016-11-29

* Removed "New user" button from user list screen, since it didn't actually
  work and it's not how users are created.

* The dialogue box on the top of the left hand column in the main scheduler
  screen now auto-submits when the user selects a value.  It's not obvious
  to the casual user that this is implemented as a form (with just the
  one visible field) so some were baffled as to how to submit it.

* In the event editing screen, the field to add resources to the event
  now has an "Add" button to the right of it, for those who prefer to have
  something on which to click.

* A significant re-work of the facilities for looking up user records,
  including the addition of a "Search" box in order to jump straight
  to a particular user.


v0.12   2016-11-21

* Added edit_all_events and subedit_all_events to user records.

  Two new flags on the user record which can be set and cleared by
  administrators.  The former allows a user to edit any event in the
  system as if he or she was the owner.  The latter works similarly
  except it confers only sub-editing capability - as if the user
  was the organiser.


v0.11.2 2016-11-18

* A little wrinkle arose in the iSAMS data import this morning.  A new
  node has been added to the Day node under the Week specifications.
  Nodes are nested as follows:

    <Structure>
      <Week>
        <Days>
          <Day>
            <Periods>
              <Period>


  but the new node has been added in parallel to Periods and with the
  name <Day>, giving:

        <Days>
          <Day>
            <Day>
            <Periods>

  which isn't invalid XML, but is more than a little odd.  The loader
  was looking inside <Days> for <Day> and finding it more than once.

  The XML import code has been tightened up to ignore the inner <Day>
  node (which has a completely different meaning from its parent).

* In the course of diagnosing the above problem, a left-over debug
  message was found in app/models/element.rb and removed.


v0.11.1 2016-11-17

* A slight error in the previous release meant that ordinary users could
  no longer create events.  Once they'd created them, they could edit them,
  but they couldn't put in the minimal information needed to create them.


v0.11   2016-11-17

* Added the means for event organisers to be enabled as sub-editors.

  Because Abingdon's live database contains a lot of events - particularly
  calendar events and sports fixtures - which have been entered by one
  individual rather than by their organisers, a means is needed to allow
  the organisers to attach team lists to the events.  Such lists are
  easily generated in iSAMS and then migrate over to Scheduler automatically.

  This release adds the facility whereby the individual listed as an
  organiser can do minor editing of the event, even though he or she
  does not own it and would not otherwise have permission.  Changing
  the title or time is not permitted, but adding and removing resources
  (except those subject to the approvals process) is.

* An extra batch job has been added to look further ahead when checking
  for lesson absentees.  It is intended to be run in the evening and by
  default looks ahead by 2 weeks, and then processes 4.  This means it
  will always slot in just after the main job which process 2 weeks.


v0.10.4 2016-11-16

* Fix a bug in the group loading code, whereby a public group was not
  correctly flagged as being available to all users.

* Add a maintenance method to fix the 8 groups currently in the system
  which have this problem.


v0.10.3 2016-11-15

* By the use of a cache, the clash checking processing has been speeded
  up by a factor of approximately 4.  This means it now easily fits
  in the available time slot.

* The overnight run now defaults to processing 2 weeks - the current
  week and the following one.

* All day events now show as "all day" in the clash check reports, rather
  than as "00:00 - 00:00" as they did before.

* There is an extra option on the clash check utility "--ahead N" which
  allows it to be run N weeks ahead.  By default and without this option
  it starts with the current week.

* A small fix has been applied to the code which selects notes for display.
  Normally this is done simply on the basis of whether a user is staff,
  pupil or other, but some users (those who approve commitments) can get
  to see extra.  A slight error in the d/b query code (an INNER JOIN which
  should have been a LEFT JOIN) meant that in exceptional circumstances
  such users failed to be shown the odd note which they should have seen.


v0.10.2 2016-11-12

* At Niki's request, changed the default for staff to have permission
  to create public groups.  Ran a command line task
  ("User.set_initial_permissions") to give all existing staff this
  permission bit.


v0.10.1 2016-11-11

* The sole change here is to this release notes file.

  The double-booking code can also notify staff by e-mail of clashes
  which have been identified.  By default it doesn't, but staff can
  choose to receive notifications in three ways.  There are new flags
  on the user record, and they edit them by clicking on their name
  on the top right of the screen in the usual way.  Admin users can
  also edit them on behalf of other users.

  a) Immediate notification.

     The user gets a notification at the end of the clash-checking run
     of anything which has changed and affects his or her lessons.

  b) Daily notification.

     The user gets a daily e-mail of upcoming clashes.

  c) Weekly notification.

     The user gets a weekly summary e-mail of upcoming clashes.


v0.10   2016-11-11

* Add a favicon.ico file with something in it, plus similar files for
  Apple devices which want an icon for their desktops.

* Checking and flagging double-booking of students.

  This is a major new feature which was always intended to be one of the
  main points of Scheduler.  Provided you store all your schedule information
  in one central place (Scheduler) you can then automatically flag up
  apparent double-bookings.  This in turn means that staff can potentially
  be told automatically when individual students are going to be missing
  from their lessons.

  The processing is fairly compute intensive (1-2 hours to process 1
  week of data) so needs to be run overnight.  Cron jobs are included to
  do the work.

  Where such clashes are identified, the affected lessons are flagged with
  a red marker in the main Scheduler display.  Clicking on the lesson
  will then display full details of who is likely to be missing and why.
  This information is visible to staff only - pupils will see neither
  the red marker nor the explanatory note.

  Scheduler can work only on the information which it has.  Music lessons
  for instance are not entered into Scheduler and so will not be handled
  by the clash checker.  As soon as they are entered, they will be checked
  in the same way.

  There are also currently some false positives caused by inaccurate
  data having been entered - e.g. on Thu 17th Nov, an all-day event has
  been entered entitled, "Product Design in Action, Warwick University".
  Unfortunately, it has been entered as involving the whole of the sixth
  form which it probably doesn't.  As for any trip, a custom group
  should be created in iSAMS, and then attached to the event.  Once this
  becomes the normal way of working the clash information will become
  fully accurate.  The existing analysis of this event is still useful,
  because it will at least flag the existence of the event to teaching
  staff.

  The flags should also serve to polish and correct the Other Half
  activity lists.  Quite a few pupils seem to be booked for two
  simultaneous OH activities.


v0.9.1  2016-11-10

* A hotfix for a problem which wasn't causing any issues from the users'
  point of view, but which led to errors in the log file.

  When a user is adding resources to event, he or she can potentially
  send back an empty field, or an invalid name, for the selected resource.
  This was leading to an error in the back end, because it did its checks
  in the wrong order.  Nothing appeared out of place to the user, but
  it made for a messy error log.

  Now checks for non-existent elements before attempting permission
  checks.


v0.9    2016-11-04

* Just one extra feature.  Administrators can now edit users' concerns
  through the GUI, rather than having to fall back to the command line.
  This is generally used to give (or take away) extra permissions
  for the user relating to an item - e.g. to give a user control
  of events using a specified resource.

  To use this, go to Menu => Users and choose Show for your required
  user.  This will give a list of his or her current concerns, and then
  you can click "Edit" next to the one which you want to change.

  Note that the names of a couple of flag fields in the underlying
  database are slightly misleading.  In the database, these are called
  "owns" and "controls".  They work as follows:

  "owns" means the user approves requests for a resource.  Any resource
  with one or more such user will need to go through the approvals
  process when requested.  In the GUI, this is labelled as "Control"
  because that's what the user is really doing.

  "controls" is an extra permission bit, intended for maintenance of
  events.  If a user has this bit set on a concern, then he or she can
  edit any event which uses that resource.  This appears in the GUI as
  "Edit any".


v0.8    2016-11-03

* As noted in the release notes for v0.7, the improved visibility of
  group membership in that release led to the detection of a long standing
  problem.  Where pupils are removed from the school in iSAMS, but not
  from their corresponding groups, then later removals failed to
  propagate into Scheduler.

  The algorithm for removing pupils from groups in Scheduler has now
  been corrected, and it will remove them even if they no longer
  appear in iSAMS's list of current pupils.


v0.7.1  2016-10-28

* Purely cosmetic change.  Puts resources for an event in the event
  display screen back into columns.


v0.7    2016-10-28

* It is now possible to view all locations which have an administrator.
  Use Menu => Models => Locations => Owned to get a list, each of which
  can then be viewed in detail.

* Subjects are now loaded into the Scheduler database as objects which
  can be displayed.  All lessons, teachers and teaching groups are linked
  to their corresponding subjects.  It is therefore possible to display
  all the lessons for a particular subject in the calendar view, or to
  generate a report for any chosen subject.

* Teaching groups are now linked not only to their subjects, but also
  to all their teachers, meaning you can see who teaches each group
  without having to scan the group's schedule.

* Added general display facilities for all elements, allowing detailed
  information to be obtained on any student, staff member, room etc.
  This facility is available only to members of staff - not to pupils.
  The display pages link together, so you can look at a teaching set, then
  at any of its students, then at any of his OH groups, etc.  Access to
  this linking is controlled by a flag (can_roam) on the user account.
  This flag is currently set to true only for users identified as staff.

* The above general display can be accessed either by clicking on an
  element being monitored in the left hand column and choosing "Full details",
  or by clicking on any event, and then on an element being used by that
  event.  Un-privileged users (e.g. students) can view only their own
  personal details.

* A long-standing bug in the iSAMS API means that it is not possible fully
  to reconstruct the timetable from the information therein.  Lessons
  taught by form group (tutor groups in Abingdon's case) cannot be linked up
  to the corresponding group without some extra information from outside.
  The way this has been handled in the past was simply to link the lesson to
  the tutor group, but this has led to steadily more problems.

  Lacking a fix from iSAMS (and they have indicated very forcefully that they
  have no intention of fixing it) a better workaround has now been implemented.
  The missing information is now re-constructed and all the missing teaching
  groups (with names like "1M Ma") are generated internally as part of the
  data import process.  They can then be treated as full teaching groups,
  with all the necessary ancillary information.

* The "active" flag in the iSAMS d/b for OH groups seems not to be used.
  All groups have it set to false all the time.  The loader has been enhanced
  to ignore it and instead to a date-based calculation to decide the active
  groups.

* The iSAMS database seems to lack basic integrity checking, in that pupils
  who have left the school can still be listed as members of groups.
  The loader was already correcting this as part of the loading process,
  but because of the sheer quantity, it now doesn't complain about them
  unless the --verbose option is given.

  At a late point in testing, one extra result of this was noticed.  Where
  a pupil has left the school and iSAMS has removed him from the pupil
  lists before removing him from his sets, the loader now copes fine but
  there remains a logic error in the loader - because the student became
  an ex-student *before* leaving his sets it then doesn't remove him from
  his sets on subsequent runs.  The reason for this is fully understood
  and it will be corrected in the next release.  It was too late to add
  it to this one.  The problem is a long-standing one and just hasn't been
  noticed up until now, because it wasn't so easy to check the exact
  membership of groups.

* Eras have acquired a short name, for ease of display in tabs.


v0.6.2  2016-10-21

* Hotfix to fix display of unapproved events.

  Code was added in v0.2 of the software to allow requesters to see
  events in the context of a requested resource even before the
  request was approved.  Users were getting confused by not being
  able to see them.
                   
  Unfortunately this led to a display problem in the case of one very
  edge condition, resulting in an event not being displayed.  This
  release fixes that problem.


v0.6.1  2016-10-12

* Hotfix to restore missing file.

  I accidentally deleted a file in the previous release.  It is used
  solely for fetching data direct from iSAMS's database, so didn't
  show up as missing until this morning's data fetch.

  Now restored from previous commit.


v0.6    2016-10-11

* Add an extra field to OTL's timetable export file.

  OTL requested an extra column on the CSV file of timetable events
  which is auto-generated for him each night.  This contains the
  period number for each event, enabling the whole lot to be sorted
  into chronological order.

* Suppress warning message about invalid student IDs.

  The iSAMS database lacks basic integrity checking for students who
  leave, with the result that they can have left the school but still
  be listed as members of certain groups.  The warning messages for
  teaching groups were suppressed in an earlier release.  This one does
  the same thing for OH groups.


v0.5    2016-10-04

* No code changes at all.

  This release exists solely to test the migration to the new source
  repository - repository.xronos.uk


v0.4    2016-10-02

* Import utility can now set staff records to active

  The importer has always taken a very conservative approach to changing
  the "active" flag on records.  Historically it has set it on
  a best-effort basis, and then never changed.  This has led to one slight
  problem, in that staff get added in an incomplete fashion to iSAMS
  (resulting in a record in Scheduler with active set to false) and then
  don't automatically change when the record is completed.

  This became apparent when Helen K Whitworth was assigned a cover,
  and it turned out she had no timetable in Scheduler because she wasn't
  active.  On investigation, 6 other members of staff (mainly SHSK, or
  peripatetic teachers) were in the same position.
                        
  The method now is to allow the flag to be changed from false to true,
  but never the other way around.

  NEVER change a record's active flag from true to false!


v0.3    2016-09-30

* Suppress a warning message generated by the iSAMS => Scheduler import
  utility when a tutorial involves no teaching staff.

* Add students to the list of resources which can be associated with
  a tutorial.

* Add a new utility - utils/checkrecurring - which can be run after
  changes are made to recurring events in YAML files.  It uses exactly
  the same code as the import utility, but doesn't effect any changes
  and runs in only a few seconds.  It checks for both badly structured
  YAML, and unidentifiable resources.

  As it stands, the utility reports the files which it is checking.
  If the traditional UNIX philosophy of keeping quiet unless something
  goes wrong is preferred, then edit utils/checkrecurring and add --quiet
  to the invocation of the utility.


v0.2    2016-09-28

Changes:

* If a user has a resource selected for display but currently disabled -
  that is the tick-box is unticked - then adding the same resource a
  second time will cause it to be displayed.  This is because when a user
  has a lot of resources selected, he or she may not notice that the
  required one is already there.  The requirement is clearly to show
  it, so show it.

* Reduce notification e-mails.
  The system generates daily e-mails to approvers of resources reminding
  them about pending requests.  When checking for pending requests, the
  system was previously including rejected requests which could lead to
  empty reminder e-mails.  Now only generates e-mails about genuinely
  pending requests.

* Improve display of pending requests.
  Before a request for a resource has been approved, it does not appear
  in the general display for that resource.  Thus, if for instance someone
  has requested that an event be included in the calendar, it doesn't actually
  appear in the calendar until DJD has approved it.  It is however visible,
  greyed out, to DJD and any other approver.

  This led to a bit of confusion, in that the requester too couldn't see it
  in the context of the requested resource.  He or she could see it as
  one of "My events", and in the context of any of the other resources
  used, but not in the context of the one awaiting approval.  Unfortunately,
  some users were turning off all their display except for the requested
  resource and then getting puzzled at not being able to see the event.

  The rule now is: a pending request for a resource will be displayed in
  the context of that resource to:

    Approvers of the resource
    Admin users
    The original requester

* Various chronological development notes have been added in the notes
  directory.



v0.1    2016-09-26

The first release done under the GitFlow convention.  Very many things
happened before this release, but for calibration the last such change
was:

* Dump the entire timetable to a CSV file for analysis by OTL.
