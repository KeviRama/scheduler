v0.6    2016-10-11

* Add an extra field to OTL's timetable export file.

  OTL requested an extra column on the CSV file of timetable events
  which is auto-generated for him each night.  This contains the
  period number for each event, enabling the whole lot to be sorted
  into chronological order.

* Suppress warning message about invalid student IDs.

  The iSAMS database lacks basic integrity checking for students who
  leave, with the result that they can have left the school but still
  be listed as members of certain groups.  The warning messages for
  teaching groups were suppressed in an earlier release.  This one does
  the same thing for OH groups.


v0.5    2016-10-04

* No code changes at all.

  This release exists solely to test the migration to the new source
  repository - repository.xronos.uk


v0.4    2016-10-02

* Import utility can now set staff records to active

  The importer has always taken a very conservative approach to changing
  the "active" flag on records.  Historically it has set it on
  a best-effort basis, and then never changed.  This has led to one slight
  problem, in that staff get added in an incomplete fashion to iSAMS
  (resulting in a record in Scheduler with active set to false) and then
  don't automatically change when the record is completed.

  This became apparent when Helen K Whitworth was assigned a cover,
  and it turned out she had no timetable in Scheduler because she wasn't
  active.  On investigation, 6 other members of staff (mainly SHSK, or
  peripatetic teachers) were in the same position.
                        
  The method now is to allow the flag to be changed from false to true,
  but never the other way around.

  NEVER change a record's active flag from true to false!


v0.3    2016-09-30

* Suppress a warning message generated by the iSAMS => Scheduler import
  utility when a tutorial involves no teaching staff.

* Add students to the list of resources which can be associated with
  a tutorial.

* Add a new utility - utils/checkrecurring - which can be run after
  changes are made to recurring events in YAML files.  It uses exactly
  the same code as the import utility, but doesn't effect any changes
  and runs in only a few seconds.  It checks for both badly structured
  YAML, and unidentifiable resources.

  As it stands, the utility reports the files which it is checking.
  If the traditional UNIX philosophy of keeping quiet unless something
  goes wrong is preferred, then edit utils/checkrecurring and add --quiet
  to the invocation of the utility.


v0.2    2016-09-28

Changes:

* If a user has a resource selected for display but currently disabled -
  that is the tick-box is unticked - then adding the same resource a
  second time will cause it to be displayed.  This is because when a user
  has a lot of resources selected, he or she may not notice that the
  required one is already there.  The requirement is clearly to show
  it, so show it.

* Reduce notification e-mails.
  The system generates daily e-mails to approvers of resources reminding
  them about pending requests.  When checking for pending requests, the
  system was previously including rejected requests which could lead to
  empty reminder e-mails.  Now only generates e-mails about genuinely
  pending requests.

* Improve display of pending requests.
  Before a request for a resource has been approved, it does not appear
  in the general display for that resource.  Thus, if for instance someone
  has requested that an event be included in the calendar, it doesn't actually
  appear in the calendar until DJD has approved it.  It is however visible,
  greyed out, to DJD and any other approver.

  This led to a bit of confusion, in that the requester too couldn't see it
  in the context of the requested resource.  He or she could see it as
  one of "My events", and in the context of any of the other resources
  used, but not in the context of the one awaiting approval.  Unfortunately,
  some users were turning off all their display except for the requested
  resource and then getting puzzled at not being able to see the event.

  The rule now is: a pending request for a resource will be displayed in
  the context of that resource to:

    Approvers of the resource
    Admin users
    The original requester

* Various chronological development notes have been added in the notes
  directory.



v0.1    2016-09-26

The first release done under the GitFlow convention.  Very many things
happened before this release, but for calibration the last such change
was:

* Dump the entire timetable to a CSV file for analysis by OTL.
