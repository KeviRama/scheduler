v0.11.2 2016-11-18

* A little wrinkle arose in the iSAMS data import this morning.  A new
  node has been added to the Day node under the Week specifications.
  Nodes are nested as follows:

    <Structure>
      <Week>
        <Days>
          <Day>
            <Periods>
              <Period>


  but the new node has been added in parallel to Periods and with the
  name <Day>, giving:

        <Days>
          <Day>
            <Day>
            <Periods>

  which isn't invalid XML, but is more than a little odd.  The loader
  was looking inside <Days> for <Day> and finding it more than once.

  The XML import code has been tightened up to ignore the inner <Day>
  node (which has a completely different meaning from its parent).

* In the course of diagnosing the above problem, a left-over debug
  message was found in app/models/element.rb and removed.


v0.11.1 2016-11-17

* A slight error in the previous release meant that ordinary users could
  no longer create events.  Once they'd created them, they could edit them,
  but they couldn't put in the minimal information needed to create them.


v0.11   2016-11-17

* Added the means for event organisers to be enabled as sub-editors.

  Because Abingdon's live database contains a lot of events - particularly
  calendar events and sports fixtures - which have been entered by one
  individual rather than by their organisers, a means is needed to allow
  the organisers to attach team lists to the events.  Such lists are
  easily generated in iSAMS and then migrate over to Scheduler automatically.

  This release adds the facility whereby the individual listed as an
  organiser can do minor editing of the event, even though he or she
  does not own it and would not otherwise have permission.  Changing
  the title or time is not permitted, but adding and removing resources
  (except those subject to the approvals process) is.

* An extra batch job has been added to look further ahead when checking
  for lesson absentees.  It is intended to be run in the evening and by
  default looks ahead by 2 weeks, and then processes 4.  This means it
  will always slot in just after the main job which process 2 weeks.


v0.10.4 2016-11-16

* Fix a bug in the group loading code, whereby a public group was not
  correctly flagged as being available to all users.

* Add a maintenance method to fix the 8 groups currently in the system
  which have this problem.


v0.10.3 2016-11-15

* By the use of a cache, the clash checking processing has been speeded
  up by a factor of approximately 4.  This means it now easily fits
  in the available time slot.

* The overnight run now defaults to processing 2 weeks - the current
  week and the following one.

* All day events now show as "all day" in the clash check reports, rather
  than as "00:00 - 00:00" as they did before.

* There is an extra option on the clash check utility "--ahead N" which
  allows it to be run N weeks ahead.  By default and without this option
  it starts with the current week.

* A small fix has been applied to the code which selects notes for display.
  Normally this is done simply on the basis of whether a user is staff,
  pupil or other, but some users (those who approve commitments) can get
  to see extra.  A slight error in the d/b query code (an INNER JOIN which
  should have been a LEFT JOIN) meant that in exceptional circumstances
  such users failed to be shown the odd note which they should have seen.


v0.10.2 2016-11-12

* At Niki's request, changed the default for staff to have permission
  to create public groups.  Ran a command line task
  ("User.set_initial_permissions") to give all existing staff this
  permission bit.


v0.10.1 2016-11-11

* The sole change here is to this release notes file.

  The double-booking code can also notify staff by e-mail of clashes
  which have been identified.  By default it doesn't, but staff can
  choose to receive notifications in three ways.  There are new flags
  on the user record, and they edit them by clicking on their name
  on the top right of the screen in the usual way.  Admin users can
  also edit them on behalf of other users.

  a) Immediate notification.

     The user gets a notification at the end of the clash-checking run
     of anything which has changed and affects his or her lessons.

  b) Daily notification.

     The user gets a daily e-mail of upcoming clashes.

  c) Weekly notification.

     The user gets a weekly summary e-mail of upcoming clashes.


v0.10   2016-11-11

* Add a favicon.ico file with something in it, plus similar files for
  Apple devices which want an icon for their desktops.

* Checking and flagging double-booking of students.

  This is a major new feature which was always intended to be one of the
  main points of Scheduler.  Provided you store all your schedule information
  in one central place (Scheduler) you can then automatically flag up
  apparent double-bookings.  This in turn means that staff can potentially
  be told automatically when individual students are going to be missing
  from their lessons.

  The processing is fairly compute intensive (1-2 hours to process 1
  week of data) so needs to be run overnight.  Cron jobs are included to
  do the work.

  Where such clashes are identified, the affected lessons are flagged with
  a red marker in the main Scheduler display.  Clicking on the lesson
  will then display full details of who is likely to be missing and why.
  This information is visible to staff only - pupils will see neither
  the red marker nor the explanatory note.

  Scheduler can work only on the information which it has.  Music lessons
  for instance are not entered into Scheduler and so will not be handled
  by the clash checker.  As soon as they are entered, they will be checked
  in the same way.

  There are also currently some false positives caused by inaccurate
  data having been entered - e.g. on Thu 17th Nov, an all-day event has
  been entered entitled, "Product Design in Action, Warwick University".
  Unfortunately, it has been entered as involving the whole of the sixth
  form which it probably doesn't.  As for any trip, a custom group
  should be created in iSAMS, and then attached to the event.  Once this
  becomes the normal way of working the clash information will become
  fully accurate.  The existing analysis of this event is still useful,
  because it will at least flag the existence of the event to teaching
  staff.

  The flags should also serve to polish and correct the Other Half
  activity lists.  Quite a few pupils seem to be booked for two
  simultaneous OH activities.


v0.9.1  2016-11-10

* A hotfix for a problem which wasn't causing any issues from the users'
  point of view, but which led to errors in the log file.

  When a user is adding resources to event, he or she can potentially
  send back an empty field, or an invalid name, for the selected resource.
  This was leading to an error in the back end, because it did its checks
  in the wrong order.  Nothing appeared out of place to the user, but
  it made for a messy error log.

  Now checks for non-existent elements before attempting permission
  checks.


v0.9    2016-11-04

* Just one extra feature.  Administrators can now edit users' concerns
  through the GUI, rather than having to fall back to the command line.
  This is generally used to give (or take away) extra permissions
  for the user relating to an item - e.g. to give a user control
  of events using a specified resource.

  To use this, go to Menu => Users and choose Show for your required
  user.  This will give a list of his or her current concerns, and then
  you can click "Edit" next to the one which you want to change.

  Note that the names of a couple of flag fields in the underlying
  database are slightly misleading.  In the database, these are called
  "owns" and "controls".  They work as follows:

  "owns" means the user approves requests for a resource.  Any resource
  with one or more such user will need to go through the approvals
  process when requested.  In the GUI, this is labelled as "Control"
  because that's what the user is really doing.

  "controls" is an extra permission bit, intended for maintenance of
  events.  If a user has this bit set on a concern, then he or she can
  edit any event which uses that resource.  This appears in the GUI as
  "Edit any".


v0.8    2016-11-03

* As noted in the release notes for v0.7, the improved visibility of
  group membership in that release led to the detection of a long standing
  problem.  Where pupils are removed from the school in iSAMS, but not
  from their corresponding groups, then later removals failed to
  propagate into Scheduler.

  The algorithm for removing pupils from groups in Scheduler has now
  been corrected, and it will remove them even if they no longer
  appear in iSAMS's list of current pupils.


v0.7.1  2016-10-28

* Purely cosmetic change.  Puts resources for an event in the event
  display screen back into columns.


v0.7    2016-10-28

* It is now possible to view all locations which have an administrator.
  Use Menu => Models => Locations => Owned to get a list, each of which
  can then be viewed in detail.

* Subjects are now loaded into the Scheduler database as objects which
  can be displayed.  All lessons, teachers and teaching groups are linked
  to their corresponding subjects.  It is therefore possible to display
  all the lessons for a particular subject in the calendar view, or to
  generate a report for any chosen subject.

* Teaching groups are now linked not only to their subjects, but also
  to all their teachers, meaning you can see who teaches each group
  without having to scan the group's schedule.

* Added general display facilities for all elements, allowing detailed
  information to be obtained on any student, staff member, room etc.
  This facility is available only to members of staff - not to pupils.
  The display pages link together, so you can look at a teaching set, then
  at any of its students, then at any of his OH groups, etc.  Access to
  this linking is controlled by a flag (can_roam) on the user account.
  This flag is currently set to true only for users identified as staff.

* The above general display can be accessed either by clicking on an
  element being monitored in the left hand column and choosing "Full details",
  or by clicking on any event, and then on an element being used by that
  event.  Un-privileged users (e.g. students) can view only their own
  personal details.

* A long-standing bug in the iSAMS API means that it is not possible fully
  to reconstruct the timetable from the information therein.  Lessons
  taught by form group (tutor groups in Abingdon's case) cannot be linked up
  to the corresponding group without some extra information from outside.
  The way this has been handled in the past was simply to link the lesson to
  the tutor group, but this has led to steadily more problems.

  Lacking a fix from iSAMS (and they have indicated very forcefully that they
  have no intention of fixing it) a better workaround has now been implemented.
  The missing information is now re-constructed and all the missing teaching
  groups (with names like "1M Ma") are generated internally as part of the
  data import process.  They can then be treated as full teaching groups,
  with all the necessary ancillary information.

* The "active" flag in the iSAMS d/b for OH groups seems not to be used.
  All groups have it set to false all the time.  The loader has been enhanced
  to ignore it and instead to a date-based calculation to decide the active
  groups.

* The iSAMS database seems to lack basic integrity checking, in that pupils
  who have left the school can still be listed as members of groups.
  The loader was already correcting this as part of the loading process,
  but because of the sheer quantity, it now doesn't complain about them
  unless the --verbose option is given.

  At a late point in testing, one extra result of this was noticed.  Where
  a pupil has left the school and iSAMS has removed him from the pupil
  lists before removing him from his sets, the loader now copes fine but
  there remains a logic error in the loader - because the student became
  an ex-student *before* leaving his sets it then doesn't remove him from
  his sets on subsequent runs.  The reason for this is fully understood
  and it will be corrected in the next release.  It was too late to add
  it to this one.  The problem is a long-standing one and just hasn't been
  noticed up until now, because it wasn't so easy to check the exact
  membership of groups.

* Eras have acquired a short name, for ease of display in tabs.


v0.6.2  2016-10-21

* Hotfix to fix display of unapproved events.

  Code was added in v0.2 of the software to allow requesters to see
  events in the context of a requested resource even before the
  request was approved.  Users were getting confused by not being
  able to see them.
                   
  Unfortunately this led to a display problem in the case of one very
  edge condition, resulting in an event not being displayed.  This
  release fixes that problem.


v0.6.1  2016-10-12

* Hotfix to restore missing file.

  I accidentally deleted a file in the previous release.  It is used
  solely for fetching data direct from iSAMS's database, so didn't
  show up as missing until this morning's data fetch.

  Now restored from previous commit.


v0.6    2016-10-11

* Add an extra field to OTL's timetable export file.

  OTL requested an extra column on the CSV file of timetable events
  which is auto-generated for him each night.  This contains the
  period number for each event, enabling the whole lot to be sorted
  into chronological order.

* Suppress warning message about invalid student IDs.

  The iSAMS database lacks basic integrity checking for students who
  leave, with the result that they can have left the school but still
  be listed as members of certain groups.  The warning messages for
  teaching groups were suppressed in an earlier release.  This one does
  the same thing for OH groups.


v0.5    2016-10-04

* No code changes at all.

  This release exists solely to test the migration to the new source
  repository - repository.xronos.uk


v0.4    2016-10-02

* Import utility can now set staff records to active

  The importer has always taken a very conservative approach to changing
  the "active" flag on records.  Historically it has set it on
  a best-effort basis, and then never changed.  This has led to one slight
  problem, in that staff get added in an incomplete fashion to iSAMS
  (resulting in a record in Scheduler with active set to false) and then
  don't automatically change when the record is completed.

  This became apparent when Helen K Whitworth was assigned a cover,
  and it turned out she had no timetable in Scheduler because she wasn't
  active.  On investigation, 6 other members of staff (mainly SHSK, or
  peripatetic teachers) were in the same position.
                        
  The method now is to allow the flag to be changed from false to true,
  but never the other way around.

  NEVER change a record's active flag from true to false!


v0.3    2016-09-30

* Suppress a warning message generated by the iSAMS => Scheduler import
  utility when a tutorial involves no teaching staff.

* Add students to the list of resources which can be associated with
  a tutorial.

* Add a new utility - utils/checkrecurring - which can be run after
  changes are made to recurring events in YAML files.  It uses exactly
  the same code as the import utility, but doesn't effect any changes
  and runs in only a few seconds.  It checks for both badly structured
  YAML, and unidentifiable resources.

  As it stands, the utility reports the files which it is checking.
  If the traditional UNIX philosophy of keeping quiet unless something
  goes wrong is preferred, then edit utils/checkrecurring and add --quiet
  to the invocation of the utility.


v0.2    2016-09-28

Changes:

* If a user has a resource selected for display but currently disabled -
  that is the tick-box is unticked - then adding the same resource a
  second time will cause it to be displayed.  This is because when a user
  has a lot of resources selected, he or she may not notice that the
  required one is already there.  The requirement is clearly to show
  it, so show it.

* Reduce notification e-mails.
  The system generates daily e-mails to approvers of resources reminding
  them about pending requests.  When checking for pending requests, the
  system was previously including rejected requests which could lead to
  empty reminder e-mails.  Now only generates e-mails about genuinely
  pending requests.

* Improve display of pending requests.
  Before a request for a resource has been approved, it does not appear
  in the general display for that resource.  Thus, if for instance someone
  has requested that an event be included in the calendar, it doesn't actually
  appear in the calendar until DJD has approved it.  It is however visible,
  greyed out, to DJD and any other approver.

  This led to a bit of confusion, in that the requester too couldn't see it
  in the context of the requested resource.  He or she could see it as
  one of "My events", and in the context of any of the other resources
  used, but not in the context of the one awaiting approval.  Unfortunately,
  some users were turning off all their display except for the requested
  resource and then getting puzzled at not being able to see the event.

  The rule now is: a pending request for a resource will be displayed in
  the context of that resource to:

    Approvers of the resource
    Admin users
    The original requester

* Various chronological development notes have been added in the notes
  directory.



v0.1    2016-09-26

The first release done under the GitFlow convention.  Very many things
happened before this release, but for calibration the last such change
was:

* Dump the entire timetable to a CSV file for analysis by OTL.
