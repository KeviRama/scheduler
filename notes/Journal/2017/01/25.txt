Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2017-01-25T08:55:17+00:00

====== Wednesday 25 Jan 2017 ======

Just getting started on implementing the Invigilation stuff.  I am inclined to try to use Backbone and Underscore and come up with some much better structured front end, at least for this bit.

I think I can lift stuff from the Todo code tutorial to handle each column of my data.

Just had a thought - rather than entering a separate set of slots for each day of the week, I could enter one set of slots - possibly overlapping - and then provide 7 tick boxes for each slot, defaulting to having Mon-Fri ticked.  Would that be more or less clear for the end user?

If I have separate columns for each day of the week they're not going to be lined vertically between days.  I can potentially make a table appear as I add slots.

I can then have a RotaTemplate for the week, which has a number of RotaSlots, but each of the latter covers one or more days of the week.  I think that potentially gives the greatest clarity and efficient storage.  It will be much clearer that the same slot applies on multiple days than if the user has to work his way across between columns checking the individual time texts.  I'm afraid we end up with a table again, but this is quite honestly tabular data.

So - what are my models?

=== RotaTemplate ===
* name - string

=== RotaSlot ===
* rotatemplate_id - integer
* starts_at - time
* ends_at - time
* days - array of booleans, stored as text


Let's generate a scaffold for these so I can play with them - even though none of that code will eventually be of use - everything will come via JSON requests from Backbone.  Actually - one bit could be used.  The index of rotatemplates would be useful to access.  Just a list, and that can be generated by the server.  It's when we start editing that Backbone will come into its own.

So, I need to add Backbone and Underscore to my Javascript.  Let's put them in explicitly, rather than using gems.
