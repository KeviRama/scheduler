Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2014-08-04T09:06:00+01:00

====== Monday 04 Aug 2014 ======

Today I intend to try to get a predictive text field working.  I've done it before, but things have moved on.

Having done a certain amount of research, I've made a slightly arbitrary decision to try rails3-jquery-autocomplete as my gem first.  Added that to my Gemfile and ran bundle.  It's installed version 1.0.14 which is reasonably up to date.  I believe 1.0.12 and above support Rails 4.

I'll try following the instructions on their homepage first.  I could do with a separate partial to create the form.  I really need to change the element_name field in my staff records so that they include the initials.  I could go for either:

JHW - John Winters

as I have in Markbook, or perhaps:

John Winters (JHW)

although there's a risk of muddling that with students, who should look like this.

Barney Bussell (4JHW)

Anyway - basic functionality first.

Now - given that I am searching my element records, which controller should get the action?  The first place I want it is in the schedule display, but I will definitely want to use it elsewhere as well.  That suggests that the action should be in the elements controller - which doesn't currently exist.  Perhaps this is an excuse to create it.  OTOH, in Markbook I have a separate AjaxController to do this work.  Decisions, decisions.

In Markbook I have two kinds of auto-complete - Resources and Students.  Resources are used when I want to do a general search, whilst Students are used when I'm populating a teaching group.  I'm not sure whether I'll want the same functionality in Scheduler.  I do however have Ajax stuff already in general places, so it doesn't quite make sense to pretend it's all in an AjaxController.

I think I'll shove it in an ElementsController for now.

Wow!  Got predictive text working.  Now I need to think about what exact action will be connected to this form.  Effectively what I want to do is create a new Interest record, linking the current user to the indicated Element.  There will also need to be links in the existing records to allow the deletion of existing Interest records.  Perhaps then this whole form should be handled by the Interests controller (which also doesn't exist yet).  It would have index, new, create, and destroy methods, each of which would refer you back to where you came from (or perhaps merely update part of your page, plus trigger some Javascript).

It seems the way to update part of a page is to send down a Javascript fragment which replaces a particular section.  That Javascript fragment could also trigger a reload of events into the calendar.

That's all working now, but I think my big task for tomorrow is to try to set up a separate event feed for each element which is being monitored.  This will require me to revise my Javascript-fu
