Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2014-08-10T07:34:27+01:00

====== Sunday 10 Aug 2014 ======

My auto-group code definitely needs some way of identifying its own groups, otherwise someone else could create a group of the same name and my code would end up adding people to it (it doesn't check permissions).

The simplest way would simply be to adjust my code to check for un-owned groups only.  They are assumed to be system groups, and thus under my loader's control.  I should also check that they are of the same type.  Checking they are un-owned means I need a join because the ownership is held in the element.

Interestingly, the owner_id field for a group is currently in the element.  When I put it there I said that I could conceive of only groups as entities which are owned, and I haven't changed that view.  So I'm thinking of changing the significance.  I still want it there (in order to be able to do filtered searches) but it should be just a shadow of information provided in the entity.  Most entities won't provide it (and so it will be nil), but groups potentially will.  Anything without an owner is a system entity.

Things to do now then:

[*] Delete tutorgroups table
[*] Delete teachinggroups table
[*] Add owner_id field to groups
[*] Amend Group and User to link them together
[*] Add code to the Elemental concern to keep the element's owner_id field up to date.
[*] Improve the SB loader to check only for Vanilla groups which have no owner when doing autogroups.
[*] Improve the element search field to exclude elements belonging to other users.

and then on to getting my event editing code working.

Again we run into the problem of two types of ownership - ownership in the sense of being responsible for, and ownership in the sense of creator of.  See [[:Ownership|Ownership]] 

Having got all the above changes done, perhaps it's time to promote stuff onto the live system.

Steps:

[*] Test with a fresh download of live system d/b and data files
[*] Dump live system d/b
[*] Move new code to live system
[*] export RAILS_ENV=production
[*] rake db:migrate
[*] touch tmp/restart.txt
[*] Test basic access
[*] Run script to create auto-groups

An easier than average next step would be to make the dialogue for creating and editing groups work.  This should be accessible to anyone with permission to create groups.  For now that means the "editor" bit needs to be set in their individual user record, or they need to be an administrator.
