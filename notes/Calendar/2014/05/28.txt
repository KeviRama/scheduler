Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2014-05-28T08:46:29+01:00

====== Wednesday 28 May 2014 ======

It occurred to me last night that loading students is no longer dependent on having the tutorgroups in place first.  On Markbook, each student record is inextricably linked to one tutorgroup record.  The pointer is in the student record, and it's not allowed to be null.  One therefore creates the tutorgroups, then loads the students into them.

In Scheduler, tutorgroups are just another group.  There's nothing forcing students to belong to one, and they could potentially belong to more than one.  It would make sense to do some sanity checks (that each student belongs to exactly one tutor group) but apart from that there's no particular issue.

I can however potentially use the tutor group records to control the loading of students.  There are 13244 students in the file exported from SB, and I want only nine hundred and something.

Let's create a pupil record and see about filtering the records into them.

At my first run I loaded 955 pupils, which is not a bad approximation to the number in the school.

Interestingly, I keep getting a difference between records where the pupil's name contains an accented character - typically an e acute.  Presumably this is another encoding issue.  Can I coerce an encoding of UTF8 at the point of entry, like I did for the stuff from the calendar?  Will it help?

I've done it twice in the imports controller, but I think it was CharlockHolmes that really did the trick.

That makes no difference in this case.  The records still show up as differing.  Is it to do with the way I'm comparing utf8 encoded strings?

If I examine the record from the Rails console, just loading it from the database, the e acute seems to be encoded as two bytes 0xc3 0xa9.  It also seems to be c3 a9 in the source file.  Why does Ruby think they are different then?

Ah - the database is returning the field as ASCII-8BIT, whilst the one I have in memory is (as I intended) UTF-8.  But surely that should make all my comparisons fail?  Why only that one?

I've found a reference to this being a problem with the mysql database library, and a suggestion to use mysql2 instead.  Try switching to mysql2.  Yes, that seems to fix it.  Had to alter them Gemfile to install mysql2 instead of mysql.

How about loading locations next - I need those too before I can have the timetable.  Those are in room.csv

Interesting problem with locations.  Quite a few have been entered with just a truncated name in the short name field.  The name field is blank.  My first inclination was to ignore them, but they include such important places as the Amey Theatre and the Chapel.  ("AmeyThe" and "Chapel").  It's also noticeable that some places have been entered twice.  The Amey Theatre Foyer appears as

302,"ATF","Amey Theatre Foyer"

and as

309, "ATFoyer",

I think I have to follow the convention of being driven by SchoolBase, but making sure that if the data in SB are ever corrected, mine will automatically get corrected too.  For now, if I have one name but not the other I will make them the same.  If I have neither name I will ignore the record.

OK - locations loaded.  Tutorgroups are probably next.  A tutor group has one member of staff associated with it (//not// a member of it), plus various members.  This is my first group object to be implemented, and I'm inclined to try to use concerns to get it to link in to a Group record.
