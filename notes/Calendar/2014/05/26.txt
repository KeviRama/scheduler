Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2014-05-26T10:17:53+01:00

====== Monday 26 May 2014 ======

Looking at the SB database records.  I want to export a minimum number of fields from each relevant record in order to build my timetable display.

I have documented all the [[:SchoolBase db|database tables]] which I intend to use, and the links between them.  Next I think it would make sense to write a bit of a Ruby script which would dump all the required data to CSV files.  The script can go into source code control, but the data mustn't.

Now managed to export a test batch of data, and am in a position to think about trying to load it into my system.  Wow!

Now, the import needs some careful thought.  I want it to be a job which can be re-run daily, so I have to be careful about massaging things too much.  My data should be driven simply by what's in SB.  *But* I also need to consider the unification of the data.  Although the resources - people, groups, locations - originate in SB, other events may then reference them.  I can't go deleting them just because SB forgets about them.  I will have to trust that SB doesn't go modifying its reference IDs willy-nilly.

The basic concept should be that we read in the data from SB, and then //compare// it with what we already have.  In the first instance, this will be nothing, but later on it should be possible to read the same data again without making any changes to our d/b.

I think I might need another field in order to filter the staff.  There are currently 894 records in the export file, and many of them are not staff.  I could look for people with an @abindon.org.uk e-mail address, but that's not totally satisfactory.

I think I'll need to take an approach of saying that everything provided by SB gets imported (unless I can find a definitive filter, like identifying pupils at the prep school) but then may well be marked as inactive, which will prevent it appearing in anything.  When a record is first seen I'll use some sort of algorithm (e.g. for staff - has he/she got an abingdon.org.uk e-mail address) to decide the initial state of the flag, but then I'll leave it alone once the record exists.  I can then tweak the import data - activating and deactivating as required - without that information being lost on subsequent imports.
