Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2014-06-27T07:07:32+01:00

====== Friday 27 Jun 2014 ======

The frantic activity of the end of term has meant no progress in the last week.  However, I've finished my reports and I'm hoping to get some serious work done today - deo volente.

Things to look at:

[ ] Google login
[ ] Selecting events to view
[ ] Switching to Twitter Bootstrap
[ ] Creating and editing events

What gem to use for the Google login?  As always, there's a wide choice.  ISTR however that there's a unified login plugin which potentially allows lots of different things including Google.  That might make sense.

Omniauth - that's the chap.  Lots of gems of omniauth available.  Istr seeing a set of instructions which used omniauth-google-oauth2.  A bit of reading first though, and perhaps create a git branch before I start playing.

The gem is documented at: https://github.com/zquestz/omniauth-google-oauth2 and seems specific enough to Rails.  One can then go on and use an authorisation gem like Devise, but I suspect that is overkill for my purposes.  In any case, the Devise documentation recommends that your should roll your own the first time so that you understand what is going on.

Create a new branch with:

'''
git branch google_login
git checkout google_login
'''


Edited the gemfile and added omniauth-google-oauth2.  Now need to set things up at Google.  I believe I have already created my app there.  Contacts API and Google+ API are both on.  Ah yes - I think I got as far as going to the consent screen, and then it said I needed to wait 10 minutes for changes to take effect.  It's been a lot more than ten minutes now.  Ah, but I didn't put in the project name.  Now done.

Now let's add stuff in my application.  I need my GOOGLE_CLIENT_ID and my GOOGLE_CLIENT_SECRET.  Since I don't want these in my source control system I'll put them in an environment file, like I have the SQL password.  It needs to be outside my source tree - I'll out it in my .profile for now.

Wow!  It actually did something, although it then hit an error, which I think was Google saying they didn't know how to send me back to my app.  Text of error message is:

'''
Error: redirect_uri_mismatch

Application: Abingdon School Scheduler

You can email the developer of this application at: jhwinters@gmail.com

The redirect URI in the request: http://localhost:3000/auth/google_oauth2/callback did not match a registered redirect URI

Learn more

Request Details
Thatâ€™s all we know.
'''


I think that's saying that Google doesn't recognize that as a place I have authorised them to refer the user on to (rather than that it doesn't exist in my app, which it doesn't).  Clearly I need to do a bit more configuring at the google end.  I do remember seeing in some instructions - Google's? - that you need to list the URLs for your app.

It's weird - I can find absolutely no way to edit (or view details of) an existing Client ID on Google.  I will therefore need to create a new one with the right URL.  Ah - now this new one does display its details and has edit buttons.  Perhaps that was my main problem.  Let's update to use these new details.

Now I get further, but there's a problem after I've gone through Google's login process and try to get back to my app.  There's a Rails error:

'''
invalid_request: client_secret is missing
'''


Presumably falling foul of Rails's own security measures.  It may just be that I haven't yet provided the callback.  More reading.  There's a big whole in the documentation for the gem, in that it doesn't tell you how to handle the response from google - where to put it or anything.  Let's try the main documentation for Omniauth, rather than the gem documentation.

Found an example at:

''https://github.com/RailsApps/rails-omniauth''

which purports to be a sample Rails app using omniauth.  Might be helpful.  Rails 4.1 even.  It also references something called Rails Composer, which helps you in the initial setup of your app.  Too late for me, but worth noting for the future.

Looking at this app, there's an entry in routes.rb which directs the callback to "sessions#create".  Currently I have no sessions controller.  Did I see something about this on Railscasts?

Hmmm.  It looks like this might actually be an error coming back from Google.  Not sure why though.  If I hadn't provided a client secret, presumably the request would never have got this far.  It is too though.  I've set an environment variable GOOGLE_SECRET, when it should be GOOGLE_CLIENT_SECRET.

That gets a bit further, but now I get a new error:

'''
can't modify middleware stack after making a request

Rails.root: /home/john/Work/Coding/scheduler
'''

No idea what that means.  It's noticeable however that, as far as Google's concerned, my login does seem to have worked because it no longer asks me for authorisation.  It just says, "Which account do you want to use?" and I'm in there.  Now why the error message?  As far as I'm aware, I'm not trying to modify anything.  It seems to be in a debug line.  Perhaps I should turn debug off again.  And now it gets into my code!  Amazing.

And I have useful information back from Google.

''#<OmniAuth::AuthHash credentials=#<OmniAuth::AuthHash expires=true expires_at=1403863773 token="ya29.MQBjdDc0W1khyRoAAAA6LfaYyzMU9IS1qlQYSPJ3Sgf6VFHY7PUrehXub-Xxaw"> extra=#<OmniAuth::AuthHash id_token="eyJhbGciOiJSUzI1NiIsImtpZCI6ImFjNmJhMDA5M2E2ZGQyOTRlOWM2YWZhNjAwMWUwM2NlYTgxMTlhNjAifQ.eyJpc3MiOiJhY2NvdW50cy5nb29nbGUuY29tIiwiaWQiOiIxMDc5MTg5NTUwMzU2MDY0MDI5NzMiLCJzdWIiOiIxMDc5MTg5NTUwMzU2MDY0MDI5NzMiLCJhenAiOiI1MDIwMjk5NTY0NzgtMmc5bmJhNG52MTJpNm84dnNibTlpZHNxcGZvbzYxYmsuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJlbWFpbCI6ImpvaG4ud2ludGVyc0BhYmluZ2Rvbi5vcmcudWsiLCJhdF9oYXNoIjoicTV1bjlwNV95clRmZmZZemtMZUxtZyIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJhdWQiOiI1MDIwMjk5NTY0NzgtMmc5bmJhNG52MTJpNm84dnNibTlpZHNxcGZvbzYxYmsuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJoZCI6ImFiaW5nZG9uLm9yZy51ayIsInRva2VuX2hhc2giOiJxNXVuOXA1X3lyVGZmZll6a0xlTG1nIiwidmVyaWZpZWRfZW1haWwiOnRydWUsImNpZCI6IjUwMjAyOTk1NjQ3OC0yZzluYmE0bnYxMmk2bzh2c2JtOWlkc3FwZm9vNjFiay5hcHBzLmdvb2dsZXVzZXJjb250ZW50LmNvbSIsImlhdCI6MTQwMzg1OTg3MywiZXhwIjoxNDAzODYzNzczfQ.GCppHfpA0s518gLZYe62B1NAkoQsObwccJsOpIKtIZyFKNCFEEayhe4pfIvi6b8Myu4vT8G8myF-Jd7WfdaH5grS7xcgQ5NUxRI9kSwbe6IKJs2VzAQJpq-y6zGYJPoThyXwCQutstIhrni3ZqaipscOlMn6vWCJXnzl1o64Nvs" raw_info=#<OmniAuth::AuthHash email="john.winters@abingdon.org.uk" email_verified="true" family_name="Winters" given_name="John" hd="abingdon.org.uk" kind="plus#personOpenIdConnect" locale="en-GB" name="John Winters" picture="https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=50" sub="107918955035606402973">> info=#<OmniAuth::AuthHash::InfoHash email="john.winters@abingdon.org.uk" first_name="John" image="https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=50" last_name="Winters" name="John Winters"> provider="google_oauth2" uid="107918955035606402973">''

I think I need to validate on e-mail address (is it a registered school address?) but allow basically anyone to log on.  Anyone without a known school address will be treated as a visitor.

What is the significance of the "email_verified" field.  Without it does it mean that Google merely thinks this is the right e-mail address?  With what degree of certainty?  Is there ever an instance when Google will return "false" there, even though the user is known to them.  I think I'll assume it has to be true for now.

So - anyone may log in to my system, but in order to get any more privileges by so doing you need:

1) A verified e-mail address
2) Which is known to us already as a school one

Provided you meet both these requirements then your user record (and session) will be linked to resource records within our system and you will by default see events relating to your resource(s).

OK - I seem to have basic login working.  Perhaps next I should test it on the live system.  I think I need to set up a different developer account at Google, so I can have my school e-mail address appear on the authorisation screen.  Ah - it isn't enabled on my school google account.  Carry on as we are then.  I need to set up the school's URL as authorised too.  How do I make sure that my application, running on the server as me, picks up the environment bits.  Try just putting it in .profile.
