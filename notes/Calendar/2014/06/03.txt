Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2014-06-03T14:43:41+01:00

====== Tuesday 03 Jun 2014 ======

The initial load of a timetable week has thrown up various points.  A design deficiency in SB means that their timetable events can have just:

* A teacher
* A room
* A teaching group

And nothing else.  If two teachers are involved (e.g. for sport) you have to create lots of events.  Likewise for things like assembly.  It would make sense if I could re-merge these events to create a single logical event.

I also need to improve my event loading so that it doesn't reload things which don't need to be reloaded.

There is an issue with lesson times, in that SB doesn't seem to have them all right.  It has:

09:00 to 09:55 instead of 09:00 to 09:50
11:10 to 12:10 instead of 11:10 to 12:05
12:10 to 13:10 instead of 12:10 to 13:05

14:00 to 15:00 instead of 14:00 to 14:55
15:00 to 16:00 instead of 15:00 to 15:55
13:45 to 14:45 instead of 13:45 to 14:40

Tutor period

12:10 to 12:50 instead of 12:10 to 12:45
12:50 to 13:30 instead of 12:50 to 13:25

I could fix all of those as part of the import process too.

When should I merge events:

* When they have exactly the same time and the same teaching group
* When they have exactly the same time and the same location

Note that they will need a new source ID, which I need to squeeze into a 32 bit int.  SB's identifiers are positive numbers going up to about 300000 at present.  In a perfect world I'd create a hash, but that would be much harder to search on subsequently.  Do I need to search on it?  I think I need it only when I'm doing a data load, and there I would envisage loading a day's worth of events from the database and then comparing them with my SB data.  How about adding the following to my event record?

* source_id		integer
* compound		boolean
* source_hash	string

If the compound flag is false then the event has an SB source id which should match what comes from SB.  If it is true then the event was created by combining events and we should use the source_hash to match it up.  The source hash will be created from the IDs of all the contributing events.

In the worst case, if the source hash doesn't match then we will end up deleting and re-creating the event in my d/b.  The extreme worst case would be if two different compound events generated the same hash, but I believe that is very unlikely.

Give it a go.
