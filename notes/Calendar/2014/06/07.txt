Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2014-06-07T12:02:24+01:00

====== Saturday 07 Jun 2014 ======

OK - got a reasonable amount of structured data loaded in, although there's still work to do.

Here's a thought about how to improve LocationAliases.  SB has two names for some places, and only one for others.  For display purposes I would like each place to have a short name and a long name.  I have been toying with having LocationAliases have two names each, but that doesn't really work because extra names come in pairs.

How about changing the processing to the following:

In each location record are a short_name and a name, which I will probably edit to come up with a nice consistent naming.  For search purposes (that is - in the element record) I will put both names if they differ.  Thus M116 would appear as "M116" whilst the CMR would appear as "CMR - Charles Maude Room".  It's no hassle for someone to pick a long name like that from a predictive text box.  The only issue then arises when you have two completely different names for a room and one of them has an abbreviation.  M117 is known as:

M117
CHR
Christ's Hospital Room

which means three names, all of which should arguably appear in a search.

I propose to change the loading code so each name arriving from SB generates its own alias.  Thus, where SB has two different names for a room, it will generate two locationalias records, both pointing to the same location and both containing the same source_id.  I can then if I wish add more alias records for other names, perhaps used in the calendar.  Perhaps I could also add a "display" flag to locationaliases, so that one could put yet another name in the search field.  The element name would then be "M117 / CMR / Christ's Hospital Room".

When the loading code from SB finds an existing locationalias record for an entry it will content itself with updating that.  If it finds one but expects two, it will create the other one, and link it to match the first.  That is, if the first one points at a location record then the second one will too.  If the first one doesn't then the second one won't either.  I don't think the loading code needs to make any attempt to delete such records.  They are few enough to do manually, and in practice I don't think a real location record will ever want to be deleted.

Do I actually want short and long names in the location record then?  Yes, I do.  I want to be able to choose one or the other to display in particular circumstances.  Are you sure?  How about just the short name in the location record, and then any required longer names in locationalias records with the display flag set.  I do use names like "Amey Theatre Foyer" in existing display code.  ATF in a timetable.  "Amey Theatre Foyer" in a list of appointments for the day.

OK - two more flags.  "Display" and "Friendly".  "Display" means it gets used in the element name and thus appears in searches.  "Friendly" means it can be used in preference to the embedded name when we want to display a full name and not just an abbreviation.

I can use a bit of subtlety in the loading process.  If I can find *any* alias for my SB record (searching by source id) I do nothing at all.  Further processing is not needed because I am in a position to find my location records when needed.

If I find no alias records to match the SB record then I want to create them, and I want to get as much naming material as I can.  SB records may have a short name, a long name, both (but different) or both (but the same).

If it has two different names then I create first the record for the short name.  Then create one for the long name and link it to the same location record.  Otherwise I create just the one LA record with the one name which I have.
