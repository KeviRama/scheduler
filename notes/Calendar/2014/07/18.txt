Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2014-07-18T08:22:54+01:00

====== Friday 18 Jul 2014 ======

Having got event merging working well for meetings, I now ask myself what else might be mergeable.

* Assemblies (multiple teachers and sets)
* Chapel (multiple teachers and sets)
* Sport (multiple teachers)
* Lessons where two teachers teach the same set in tandem - e.g. Art

Mach2 was affected by the power failure last night and so didn't do an automated update.  Did the update as soon as it came back up.

Let's start by fetching down today's data files and doing a fresh update at this end in verbose mode.  If all is well, I'll promote the new code to the live system.

Interesting - when I ran it on the live system it added not just the compound events which I was expecting, but also a smattering of atomic events.  These must be events which I was previously ignoring - presumably meetings which involve only one person.  Can I find a few of these?  Try on my home system.  There are 306 events in the Meeting category.  Are any atomic?  Yes - 78 of them.  They seem to be meetings with the titles:

* Ergos
* Catering Meeting
* Registry Meeting
* Facilities Meeting

Who do they involve?

Mark Earnshaw, Ed Swanwick  That's it.  I wonder why?  Let's attach Ed Swanwick to one of my spare accounts.  He does seem to have a lot of meetings.  If I look at his t/t in Schoolbase he does have all these meetings, so if it's wrong then it's not my fault.

Just re-factored the code for deciding whether to merge timetable entries.  Let's check it doesn't change the result.  Before we had 4407 timetable entries merging into 4237.  Exactly the same afterwards.

Also, it would be nice to add the location to the events sent to Google Calendar.  Done that.

Let's see if I can merge Assembles and Chapel.  I'll need to rely on the group names to do this.

Another thought.  Currently the one thing about events that doesn't get checked and amended is the event name.  This will become very relevant when the teaching groups get renamed later - all the events will need to change their names too.

I think I've done all that - promoted to the live system.  I couldn't find any lessons with tandem teaching, but I'll keep an eye out for such in the future.

Somebody is messing about a little - they deleted Alex Taylor from the system.  Currently there are no permission controls, so I think I need to put those in place pretty quickly.  There is also a strange problem with adding Alexander Taylor back in to his teaching groups.  The system says it's doing it, but it seems to fail.  Not sure why.  This needs investigating when I've had a bit of a sag.

The deleter is coming from 217.155.198.105 which is a Zen Internet address.  It must be one of my registered users, because no-one else can access the menus (and you'd never guess without).  I need to add permission checking on the controller actions too, but that's a slightly larger job.  Next on my song sheet though I think, once I've worked out why Alex can't be added back into his groups.

Dump the school database (again) and bring it home to see whether I get the same effect here.

Right - Alex's only group is his tutor group 6 DCB.  According to the log, the system tries to add him to various other groups but does not succeed.  We need to know why.  Note that Alex has been a member of the groups before, but the system shouldn't know that - this is a new record for him, and all the record ids should be different.

A point to note is that I don't really expect a pupil record ever to be deleted.  My idea is they get set to be no longer current, but they shouldn't ever be deleted.  I could to check one of the groups of which he is intended to be a member.

Adding Alexander Taylor to S7 R FM-1A
Adding Alexander Taylor to S7 P Ch-1
Adding Alexander Taylor to S7 R FM-1P
Adding Alexander Taylor to S7 Q Bi-1
Adding Alexander Taylor to JAC 6b Assem
Adding Alexander Taylor to JAC 6b Tu
Adding Alexander Taylor to S7 S Ph-1
Adding Alexander Taylor to S7 Spt
Adding Alexander Taylor to S7 S NoPure
Adding Alexander Taylor to S6 Chap JAC 6b
Adding Alexander Taylor to S7 Oxb None

And yet he isn't made a member of any of them.  Odd - it thinks it's found an existing membership.  Is it possible he's actually managed to pick up the same element id as he had before?  How could that have happened?

It is something to do with the fact that we are manipulating things in the future.  Our test for membership is testing whether he was a member on 2014-09-01, which in some senses he was.

Let's check Alexander's records out in detail.  He is the last pupil in the database (naturally enough).  Pupil id is 3057.  He is the only pupil of that name.  His element's id is 15586.  That too is the last one in the d/b.

Solved it - he *is* a member of the group, just not yet.  I changed the logic of setting up memberships.  They used to get set up as of today's date, but I changed it to be from the start of the era.  This is what's catching me out.  The group, and all the other memberships, have a start date of 2014-07-05, whilst Alex's membership only starts on 2014-09-01.  When I look at the membership now, he doesn't seem to be a member.  This needs thinking about a bit.  I need to be consistent, and people can reasonably expect to see the right membership if they should look at their groups in advance of the start of term.

In particular, my loading code needs to check the membership on the date when it intends to start its load from, not the membership today.  Why has this not affected his tutor group?  Because my code for putting boys into tutor groups still makes them members as from today, not from the start of the era.

Which is the correct behaviour? - think for a bit.

I've come up with two potential strategies which I'll outline here.  The situation is that the new year's teaching and tutor groups will be set up over the course of the summer.  A first cut is available very early on, but there is endless tweaking as students are added to and removed from groups.

I could let each group and membership record acquire a start date which genuinely reflects when it was created.  Thus a group might be created on, say, 10th July, and a few membership records would be put in.  Then more students could be added on the 12th, and perhaps the odd one removed.  Querying the membership of each group will tell you the current membership, as at the day of the query.  This preserves the history of additions and removals of students, but arguably this isn't really relevant.  We are interested in how the group membership changes through the course of the year, but not really in how much faffing happened over the summer.

I could make sure that all group and membership creations prior to the start date of the academic year get the date of the start of the academic year.  Thus all groups start on the 1st of September, and so do all memberships (unless of course they are created later).  This has the advantage that if someone is put in a group, then taken out again during the course of the summer, both will effectively be on the same day and the membership record will be completely deleted.  Thus the student will not appear as an ex-member of the set for the remainder of the year.  The downside of this one is that if you blindly query the membership of a set on, say 12th August, it will always come up as being empty.  This might be a reason to re-instate the previous behaviour of the "members" method, and if a group does not yet exist, then show its membership on its first day, and if it has ceased to exist then show its membership on its last day.  A distinction should be made for the case where the caller passes an explicit date - then that given date should be respected.

If I go for the latter option, I can write a helper method which runs on an era and tidies up all its existing teaching groups and tutor groups, plus their memberships.

