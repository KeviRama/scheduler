Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2016-11-17T09:04:33+00:00

====== Thursday 17 Nov 2016 ======

Hit something slightly odd in the data import.  Both this morning and on Tuesday morning, there were some changes - apparently the same changes - to the repeating events.  This suggests that someone is editing them manually, and then will be surprised to find they revert.  If it were happening every day I'd suspect a bug in my code, but for it to happen two days apart suggests manual intervention.

Plan:

[*] Investigate repeating events
[*] Small change to sub-editing
[*] Evening cron job
[*] Package up for release
[ ] Documentation

Well, I can reproduce the repeating event change on my system.  Now to find out what it is.

Events are indeed in the library (now why did I suspect that) and are today and tomorrow.  Two today, one tomorrow.  Let's take a look at the system before the run.  Yes, someone has been editing things.  Flag to Niki and ignore.

Now on to my change to sub-editing.  Just realised that it doesn't quite do it.  My plan was to stop people from deleting commitments which had gone through the approvals process.  That I have implemented, but then you have the case where something has been put in the calendar by Karen and never been approved.  The user can still delete it.  I can't just make it that they can't delete commitments to owned elements because then they could put one in and immediately be unable to remove it.  How about this:

A sub-editor can delete commitments provided:
The commitment is not in a state of approved and
The commitment is not one to an owned element, which nonetheless has no approval status - i.e. it skipped the approvals process.

Or to put it another way, a sub-editor cannot delete.

Approved commitments.
Commitments to managed elements which have none of the flags set.

All seems to work.

Tried out my evening cron job.  Using --ahead 2 --weeks 4 it took 57m51s.  It will take longer on the live system.

On to packaging my release.

Now - documentation.  I propose to use Sphinx and thus build some content for https://xronos.uk/  I can pinch stuff from these notes, and from the material which I wrote for Abingdon, although obviously I can't use any of their screen shots.

Do I produce the documentation directly on the Xronos server, or do it on my workstation and shove it over.  The latter seems more logical.  It should certainly be stored in a git repository.  I think I'm going to start on my workstation and create a new parallel directory under ~/Work/Coding[[.]]   Refresh my memory about how to use Sphinx.  I seem to have a Debian package called python3-sphinx installed.  There are various other related packages available.  You can choose a theme to affect the whole appearance of your web site.

I am inclined to start without picking a theme first.  I believe my content should be portable as and when I want to change it.  Note that a large part of Sphinx is intended to pull documentation straight from your Python source code.  I don't have any Python source code so I can't use that bit.  ISTR seeing something to enable it to read Ruby source code too, but that's not really what I'm after at present - I want to write user documentation rather than programmer documentation.  I may well want to do the latter later though.

The version in Debian Jessie is 1.2.3.  The current version is 1.4.8.  I can get 1.4.6 from Jessie-backports if the need arises.  Again, I'll go with the default for now.

It seems I need to create a directory in which to work, and then invoke sphinx-quickstart.  Try it - I can always delete the directory if I don't like it.

Got something.  As ever, the documentation for Sphinx assumes you're already familiar with it before you start.  It lacks the explanation of concepts needed for a swift take-off.  Just read for a while.

Made a start.  I'm going to need to create a dummy database too, so I can get some screen shots which don't involve any Abingdon data.
