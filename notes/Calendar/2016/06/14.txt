Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2016-06-14T15:06:30+01:00

====== Tuesday 14 Jun 2016 ======

For the first time in ages, I'm thinking of doing some coding work on Scheduler.  I need to add functionality so it can import timetable (and cover, and OH) information from iSAMS instead of SchoolBase.

I've done some proof of concept work in my isams development directory and the tools seem to be there.  I can fetch what seems to be the necessary data using curl, and then parse the resulting XML file using Nokogiri.  In the fullness of time I could set it up so that the code fetches directly from iSAMS, rather than using an intermediate file, but for development purposes it makes sense to fetch it only once and then parse it as often as I need to.

There will need to be some one-off processing to switch things over from SB to iSAMS - in particular changing the identifiers used for items imported from the other system.  Unfortunately iSAMS uses some very large integers for this purpose - I might need to enlarge my current 32 bit field, or even go over to using a string.

Taken the latest backup of Scheduler and loaded it on my development system.  All seems to be in order.

It seems to me to make sense to try to load/check the list of teaching staff first.  I may need a step to convert from SB source_id to the new iSAMS unique identifier first.  AFAICR, these are never used in the running code - just in the data loader.  Check.  No, not quite true.  Eventsource_id is used, and others too.  Ah, but eventsource_id has a different status - that refers to records in my own database.  The name is similar, but it has nothing to do with importing data.  What then has a source_id?

Commitments
Eras
Events
Locationaliases
Otherhalfgroups
Pupils
Staff
Taggroups
Teachinggroups

Can I make them bigger without breaking things?  Or would it be better to create an entirely new field?

If I make the existing field larger I can then do a mass conversion, but it has to be a one-off event and I need to keep track of whether it has happened or not.  Perhaps add a field to the settings table which contains "SchoolBase" now, and is altered to "iSAMS" when the d/b has been converted.  That fits better with the long term and the possibility of there being dozens of different source systems.  How though do I keep track of individual records which might not have been converted?  If I have 100 records in my d/b in one of the tables, and I get new records from iSAMS for 80 of them, what do I do with the other 20?  If there's just the one system-wide flag, I can't leave the old SB id in there.  Think.

If I create a second field, called for instance isams_id, then I can retain both sets of information.  Easier to comprehend, but I don't really want to go along adding an extra such field each time the parent system changes.  OTOH, it is possible that an installation of Scheduler could be taking information from two different feeding systems, in which case it might actively need two such fields.  Should each record contain the identifier of a feeding system?

Perhaps a new table which lists feeder systems:

1	SchoolBase
2	iSAMS

Then all existing records get linked to the SchoolBase one, and as they are converted they get linked instead to the iSAMS one.  Loading code can then follow an algorithm of trying to find them first by iSAMS ID, and if that fails then by SchoolBase ID, if such is available.  Data loading is a batch operation, so real-time efficiency is not too important.

Actually, this is all a bit like the existing eventsources table.  That currently contains:

* Calendar
* Manual
* SchoolBase
* Yaml

And all events reference one of those.  It would be simple enough to add iSAMS, and then link more types of record to it.  The name would of course be wrong, but quite a lot of work to go through changing it everywhere.  The obvious name for it would be DataSource to replace EventSource. 

Let's experiment with enlarging the ID field first.  Does everything have a numeric identifier?  They certainly seem to, and indeed all pupils seem to have carried over their SB ones.  This may just be because they were created in order, and I supplied them in order starting from 1.  Perhaps I don't need to make the field longer?

How much work would it be to rename that table?  Or can I set up an alias?  Event sources are fairly deeply embedded in my event handling code.  Whilst I don't think it's actually fragile, perhaps I might be better off creating a new table and model called DataSource?  This of course is where a proper test suite would be invaluable.

I kind of need to set up a temporary default for the value of datasource, but not a long term one.  All existing relevant records should have "SchoolBase", but it shouldn't be a default for future ones.

I think I like the idea of a new table better.  Slightly more work to set up, but less invasive.

Let's do some experimental work.
