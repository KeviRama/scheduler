Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2017-02-26T08:17:18+00:00

====== Sunday 26 Feb 2017 ======

What to do to finish off the current work for Dean Close.

[*] Move migration to a date before all the invigilation stuff, but after all the live migrations.
[*] Commit what I've done, on a fresh branch.
[*] Test with a clean copy of DC data.  Document steps.
[*] Test with a clean copy of Abingdon data.  May be more steps (login type).
[*] Review changes in demo-system branch to ensure Abingdon compatibility
[*] Ensure all latest changes in develop branch are in this work.
[*] Check that a data import at Abingdon still works with this new code.
[*] Package up as a release.
[*] Push to DC (and convert)
[ ] Push to Abingdon (and convert)


OK - what are the dates of the last migrations on, respetively, the live systems at Abingdon and DC.

Abingdon: 20161218 180058  addclashflag

DC: 20161222 124120 add_auth_type

and the last one from Abingdon is also present at DC.  So anything after that will do for my migration which adds the public flag to the database.  I do however want it to be before the pending migrations relating to exam invigilations.  There are quite a few of these and I'm thinking about merging them.  They are:

'''
20161218180058_addclashflag.rb
20170125092902_create_rota_templates.rb
20170125093205_create_rota_slots.rb
20170125102344_add_rs_index.rb
20170125102701_add_exams_bit.rb
20170202134032_create_exam_cycles.rb
20170205110623_create_proto_events.rb
20170205120114_create_proto_commitments.rb
20170205121418_create_proto_requests.rb
20170207102512_link_proto_events.rb
20170218102051_add_proto_commitment_link.rb
20170221144212_add_requests.rb
'''


So the first of them is on 20170125 092902 and is create_rota_templates.

I therefore want to slot my single migration (which adds make_public to Property records) in between 20161222 and 20170125.  Plenty of room.  Let's go for 20170110, and the same time.  I'll need to reload the database before the migration will work.

And no sooner do I start testing than I find a problem.  Adding a resource as a logged in user no longer seems to work.  Now this was a nasty frig at the best of times, because I added this auto-submit nonsense.  That no longer seems to work.  Why?

Hmmm.  Even if I reveal the button and do a click on it, the form does not submit.  Why?

There's something very weird going on here.  Let's commit all this code and jump back a version to make sure it's not something odd on this machine.

Go back to the code currently running at Dean Close.  feature/deanclose.  There the auto-submit works fine, so it's clearly something which I've changed in the interim.

The immediate obvious difference is that in the deanclose version of the code, my form begins:

''<form accept-charset="UTF-8"...''

whilst in the non-functional version it goes:

''<form accept-charset=" utf-8"...''

Now why on earth would that have changed?  The form relates to a Concern record created specially to be able to accept the input.  Am I creating it in a different way?  No - seems identical.  Check out the code in the view creating the form.  It seems to be identical.  Let's get the full details of the HTML of the form and compare.

This is the one which doesn't work.

'''
<td colspan="3>
	<form accept-charset=" utf-8"="" action="/concerns" class="new_concern" data-remote="true" id="new_concern" method="post"><div style="display:none"><input name="utf8" type="hidden" value="✓"></div>
	  <input class="auto_submit_item" data-auto-focus="true" data-autocomplete="/elements/autocomplete_element_name" data-id-element="#concern_element_id" id="concern_name" name="concern[name]" placeholder="Add watch item" type="text">
	  <input id="concern_element_id" name="concern[element_id]" type="hidden">
	  <input class="hidden_submit" name="commit" type="submit" value="Go">
  </td>
'''


Actually, that's not quite how Chrome displayed it, but it's what it gave me when I cut-and-pasted.

Here's the working one:

'''
<td colspan="3">
	<form accept-charset="UTF-8" action="/concerns" class="new_concern" data-remote="true" id="new_concern" method="post"><div style="display:none"><input name="utf8" type="hidden" value="✓"></div>
	  <input class="auto_submit_item" data-auto-focus="true" data-autocomplete="/elements/autocomplete_element_name" data-id-element="#concern_element_id" id="concern_name" name="concern[name]" placeholder="Add watch item" type="text">
	  <input id="concern_element_id" name="concern[element_id]" type="hidden">
	  <input class="hidden_submit" name="commit" style="display: none;" type="submit" value="Go">
</form>  </td>
'''

Ah - the form doesn't seem to end.  Why?  In fact, Vim is trying to tell me something when I edit it.  The final </td> and </tr> are in red instead of cyan and browny-yellow as usual.  Suggest I have failed to close a string or something.  Found it.  Fixed.  I'd actually failed to close a string before the form even started so I shouldn't have got a form at all.  That's the trouble with modern languages which try to skim over small mistakes and do what you meant.  Much better for the interpreter to stick in its heels and refuse to do anything, rather than guessing and getting it slightly wrong.  Now I need to hide the hidden submit again.  Did it with the stylesheet, rather than putting a style in the HTML.

Fresh copy of DC data.

[ ] ./loaddb
[ ] rake db:migrate
[ ] Log in
[ ] Edit three properties to make them public

And that seems to be it.

Now I want to try much the same thing with Abingdon's data.  I could make the Sport Calendar public to see how it goes.

When migrating Abingdon's data, we also added the AuthType column to the system settings, but that defaults to 0 so should be OK.
