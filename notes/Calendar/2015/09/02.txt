Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2015-09-02T09:48:01+01:00

====== Wednesday 02 Sep 2015 ======

Needed to finish off user editing

[*] Full path using Ajax throughout
[*] Refresh screen if user changes start day
[*] Add an X to cancel the dialogue
[*] Check both update and cancel for unknown user
[*] Check both update and cancel for known user
[*] Check both update and cancel for admin
[*] Check admin editing other users
[*] Can I tidy up the CoffeeScript code which generates the page - more use of data attributes?
[*] Can I keep track of the date which the user was looking at so he doesn't keep leaping back to today?

And then:

[ ] Add "Members" as well as "Memberships" to the display of an element
[ ] Create time-sensitive member lists like you do for group lists.

That last item is a relatively large one.

Now, to get that Ajax path working.

[*] Box should have a close icon
[*] Form should specify that it is remote
[*] Update comes in by Ajax, respond by closing dialogue and if necessary refreshing the screen

Hit an interesting problem trying to keep data in the session store.  (Currently I'm using the cookie session store.)  I can do it fine in a normal action method, but if I do it in a method invoked by an Ajax request, the update seems to be lost.  I presume this is because the data are being stored in a cookie, and either this isn't being sent back to the client, or it is being sent back but the client is ignoring it.  The problem is, it just isn't kept on the server.  I suspect it's time to move over to a server-side session store.  It might also be a race condition, because I'm making multiple parallel requests.  Yes - almost certainly a race condition - that would make perfect sense.  And in that case, the correct solution is definitely to go for a server-side store.  Now, which one?  I've used the database in the past (for Markbook) but the trouble with that is I'll have to have a database update every single time someone scrolls forward or backward by a week.  How expensive is that?  OTOH, I could set up memcached, but that's a whole lot more configuration to do.

What happens if I install memcached on this box?  It just starts and runs.  Can I now use it for my session store?  Had to add Dalli to my Gemfile.  It does now seem to manage to store my session information.  Let's remove some of the garbage.  All seems to work fine.  Perhaps I should test it on my staging server?  Or is that premature?  Steps needed.

[*] Make sure memcached is installed and running
[*] Backup database
[*] export RAILS_ENV=production
[*] git pull
[*] bundle install
[*] rake db:migrate
[*] rake assets:precompile
[*] touch tmp/restart.txt

I had a temporary problem with being unable to install the gem, but it seemed to resolve itself.

