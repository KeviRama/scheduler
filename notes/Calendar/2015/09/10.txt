Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2015-09-10T07:53:16+01:00

====== Thursday 10 Sep 2015 ======

Today I intend first to add a couple of items to the permitted overloads list for cover.  Then I will see if it's feasible to do drag-and-drop event creation.

Realised I need to change some of the existing permitted overloads because OTL has changed his set-naming convention this year.  Done.

Now, a new branch I think for dragging events.  Firstly I need to give the relevant items a draggable characteristic.  This is part of jquery-ui.  Do I already have the relevant bits of jquery-ui?  I think so.  I need to call "draggable()" on each relevant object when it is initialised.  This is either when the page is loaded, or when the item is added to the page.  Only do this for users who have edit permissions.

It seems to drag, but it goes behind the fullcalendar, so not ideal.  I also need to make it droppable, and make it fly back after use.

The documentation for draggable is a little vague, but relevant options seem to be "stack:" and "zIndex:", although it's not clear what their parameters - particularly to the first one - mean.  I find that using "zIndex: 100" seems to work.

Now, I don't really want an animated fly-back.  Set revertDuration to 0 and it isn't a problem.

Interestingly, if I clone the object (using helper: 'clone') then it changes shape as it is dragged.  An un-cloned version doesn't.  OK - I seem to have dragging, now how about dropping?

Ah - I've hit a problem which I've known about from the past.  Where fullcalendar thinks I'm dropping it, doesn't at all match the location of the image.  This is why I disabled dragging to create events in the first place.  I believe it's some sort of nasty interaction between FullCalendar and Foundation.  It's been on my list to fix for a long time.  Is now a good time to look at it?

I have previously reported what I think is a related problem with FullCalendar and Foundation.  The report and response are here:

https://code.google.com/p/fullcalendar/issues/detail?id=2152

Assuming his diagnosis is correct, and further assuming that the two problems are related (which seems likely) I have various possible approaches.

* Later (fixed?) version of Zurb Foundation
* Fix my copy of Zurb Foundation myself
* Stop using Zurb Foundation
* Put a workaround in FullCalendar

All of these require me to improve my understanding of how all these components fit together.  Time is needed, but time is what I now have.  Let's spend today trying to improve my understanding.

Let's start by taking a look at his diagnosis of the problem which I reported.  I might even change the relevant line of code to see what effect it has.  Damn - I seem to have used a minimised version of Foundation.  Hang on though - it's the CSS apparently causing the problem.  I'll try simply removing that line in Foundation's CSS in the demo.

Interesting - removing that line improves the display, but it doesn't fix the actual problem reported.  He's spotted one bad interaction, but not the one doing the damage.  Let's try removing all the table formatting from that file.  That does indeed cure it.  Would it make all the drags work too?  Test it on my scheduler development system.  How?

I am using the Gem foundation-rails.  Ah - I seem to have a file called foundation_and_overrides.css in my app.  Can I edit that to remove the table stuff?  Try it.  Yes, I can.  That corrects the display, but the drag-and-drop is still hopelessly wrong.  What happens if I turn off Foundation entirely?  I doesn't seem to go off, which I don't quite understand.

Interesting - even with the Foundation CSS turned off entirely, the drag ends up in the wrong place.  Perhaps a totally separate problem.  Can I demonstrate it on my demo server?

Is the problem perhaps that FullCalendar is measuring the mouse's displacement from the left of the screen, and ignoring the left hand margin column?

What happens if I simply update to a later version of FullCalendar?  Latest is 2.4.0.  I seem to be using 2.0.2.2.  What's available in fullcalendar2-rails?  That seems to be the latest one available.  February 2014.  OK, can I get it by an alternative route?  Perhaps not a gem then.  Downloaded the original source and tried it in isolation - his demo of drag and drop works fine, but the calendar is taking up the whole of the display.  Ah - no it isn't.  He has a column on the left, so it must be possible somehow.

OK - can I stop using the Gem and copy the necessary files into my app?

Ah - there is a Gem called fullcalendar-rails, which is at least more recent.  Perhaps I would be better trying that.

Ah - with that Gem (2.3.0) the drag does seem to end up in just about the right place.  Let's try enabling drag creation too.  Take out the table stuff too - I'll try putting the minimum necessary into my own css file.  I will need to compare DJD's reports to make sure they are still acceptable.

selectable is the thing I need to drag and create events

Making quite a lot of progress.  By disabling tables I get the columns to appear correctly, and by updating to a later version of FullCalendar I get dragging to the right place.  I've also got dragging to create an event working quite nicely.  Things to do before I can promote it to the staging server to demonstrate.

[ ] Re-instate some table functionality to make days, concerns and edit box look OK
[*] Add a default event text field to the user record
[*] Allow editors to change their default event text and preferred event category
[*] If a user has set both the above, throw them straight into event editing on creation - don't.
[*] Change the event text field to be a single line
[*] Pre-position the cursor in that field, and highlight existing text
[*] Activate draggable on dynamic elements which are added

Presumably I could re-instate all of Foundation's table rules, but make them specific to a class of table, then add that class specification to all my tables.  I can also potentially tweak individual settings for the tables, provided I can work out which ones are doing the damage.  What I really want though is for foundation to confine itself to its own tables, but that doesn't seem to be one of the tweak options.  What if I look at a later version of Foundation?

I think I need to work out first what does the damage.  Disable tables in Foundation, then start adding things in to my own stylesheet one by one until I see the problem.  First though I want to concentrate on enhancing my app.

Thought I was doing well, but suddenly I can't end using an event edit dialogue.  I don't see any errors, but the screen never comes back to un-greyed.  What have I done?  User edit still works fine, so I've done something silly to event editing.  Hang on - I was succeeding only moments ago.  It must be something I did in the last couple of minutes.  It works *sometimes* - need to track down the crucial factors.  What does the job of making the dialogue go away?  I think it's part of my response code.  Do I even get to know about it if the user clicks on the close icon?

On the live app, when the dialogue appears the order is:

Screen greys
Dialogue appears
Screen un-greys
Dialogue goes

Now on my test application the screen doesn't grey until I dismiss the dialogue.  It stays bright until I click the close icon, then goes grey before it disappears.  But I haven't changed my version of Foundation, so WTF?

Try putting the table stuff back.  No, that doesn't help.  So what is it then?  In all probability, it should be my Javscript code since I've changed quite a lot of that.  I find it hard to believe that the new version of FC could cause this problem.

Revert my javascript and try again.  Normal service is resumed.  Clearly something which I've done, or some odd interaction.  Try putting my changes back in, one by one.

My test is:

* Shift-refresh the page
* Click on the background
* Close the corresponding box with the X.

Which should be enough to demonstrate the problem when it returns.

It is of course the very last thing which I put in.  If I had a select handler to do the box opening, it all goes slightly wrong.  Now which handler was called?  Click or select?  I should be able to tell by looking at the call to the server.

It was the select handler.  Something is wrong with the way that handler is invoking the dialogue.  What?  Does dropping a dragged item onto the calendar cause the same issue?  No, that is fine.

Just noticed something - the greying out does happen, but it gets removed again immediately.  Could it be something to do with needing to clear the selection before invoking the dialogue?

Interesting phenomenon - if I do a proper drag then I get a working dialogue.  It's only if I do a click that it goes wrong. Is it that *both* callbacks are invoked?  Yes!!!!! That's it.  First the click and then the drag ones are invoked.  I need to guard against this.  How?  One test would be for the event being only 5 minutes long.  This seems to be the default if there is no movement.  It's not a proper solution (testing a side effect rather than the real problem) but...

Seems to work.  Marked as being nasty.

Having thought about it a bit, it seems that if I have a drag handler, I don't need a click handler at all.  Do it all in the drag handler (which seems to be called for a click anyway).  If the event is only 5 mins long (the apparent minimum) then treat it as having zero duration.  So - try removing the dayClick handler.

Ah - there is a problem with the idea of throwing the user straight into event editing.  If they then cancel the dialogue it appears that the event has not been created, even though it has.  I could remove the close icon, but they can still get out by hitting escape or clicking outside the box.  I can't see a way around that one.  Disable that functionality for now.
