Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2015-04-01T06:38:08+01:00

====== Wednesday 01 Apr 2015 ======

Just noticed that my SB loader code does not currently check for clashes for invigilation events.  It used to when I used a more simplistic method of loading them, but when I enhanced it to allow them to be amended and to include locations, I then seem to have missed it out.

Could do to re-instate it as we're coming into the exam season.

Seem to have managed to add it OK, but hit an immediate oddity (or rather, two).

The run time has gone from 5m19s to 10m28s.  Just this one little check shouldn't add that much more.

One error message seems to appear twice - Jeremy Taylor from 14:45 to 15:40 on Tue 5th May.  It seems to be in the system only once, so why does it appear in the error messages twice?  Could they be connected?

Start by commenting out the new code and timing a fresh run.  5m16s.  How many invigilations in the database?  1737.  How many in the future?  173.  Why so long?

Put the dbinvigilation.reload back and time again.

Do I process all invigilation records, regardless of whether they're in the past?  No - it would appear that I consider only those in the future.

5m19s with the reload in, so that isn't it.  Put the relevant code back in and hey presto, it takes 11m28s.

I need to know how many invigilations and how many covers are actually being checked. Arguably I should stop worrying about this, but I'm intrigued now by what takes the time in the processing.  Let's put some time checks in the whole thing.

I think I have it:

'''
13:00:52 finished initialisation.
13:00:53 finished pupils.
13:00:54 finished staff.
13:00:54 finished locations.
13:00:57 finished tutor groups.
13:01:33 finished teaching groups.
13:03:06 finished timetable.
Processed 80 covers and 173 invigilations.
18 apparent cover clashes.
0 apparent cover oddities.
13:11:12 finished cover.
13:11:12 finished other half.
13:11:36 finished automatic groups.
13:11:37 finished extra groups.
13:11:40 finished duties.
'''


The vast majority of the processing time is taken up checking cover and invigilations, and it's particularly the clash checking which seems to take time.  By checking invigilations I treble the number to be done, producing the increase in time.  It isn't actually a problem, but I might want to look at the reasons some day.  I expect it's one of those cases where pre-loading would speed things up a bit.  Trouble is, the log file is now very big.  I'll leave it for now.

I wonder whether I can pre-load the events when loading possibly clashing commitments.  Try with and without.

First without the pre-load.  Total run time 10m20s.  Cover+invigilation took 7m33s  With the pre-load it took 10m33s, with 7m43s on cover.  Not an improvement then.

Sod it - leave it alone.

Re-load this morning's d/b and re-load the data using my modified program.
