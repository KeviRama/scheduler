Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2015-10-04T09:07:12+01:00

====== Sunday 04 Oct 2015 ======

My objective today is to promote the new code to the live system.  This will involved re-merging my git branches, testing again on the staging server, and then deploying.  Could also do to make sure that mach2 has been backed up recently.

Steps:

[*] Back up live database
[*] Take a note of what version of s/w it is running.
[*] export RAILS_ENV=production
[*] Pull down new software
[*] rake db:migrate
[*] rake assets:precompile
[*] touch tmp/restart.txt
[*] Give VJA her groups
[*] Remove same groups from auto-loader

Version on live server is:

'''
commit 20e6ad0b8275654a5a23c6eb7c87242e98c8dedf
Author: John Winters <john@sinodun.org.uk>
Date:   Tue Sep 29 08:34:14 2015 +0100

    Reverted non-logged-in colours.
'''


The transcript of the command line session to give VJA her groups is:

'''
john@scheduler:~/Work/Coding/scheduler$ rails c
Loading production environment (Rails 4.1.0)
2.1.1 :001 > u = User.find_by(name: "Victoria Adams")
 => #<User id: 86, provider: "google_oauth2", uid: "116193668189555133266", name: "Victoria Adams", email: "victoria.adams@abingdon.org.uk", created_at: "2015-09-28 09:19:15", updated_at: "2015-09-28 15:43:34", admin: false, editor: true, colour_involved: "#234B58", colour_not_involved: "#254117", arranges_cover: false, preferred_event_category_id: nil, secretary: false, show_calendar: false, show_owned: false, privileged: false, firstday: 0, default_event_text: "", public_groups: false> 
2.1.1 :002 > Group.managed_groups_to(u)
 => nil 
2.1.1 :003 >
'''
 

And then the list of groups to remove from the extras file is:

'''
Senior Leadership Team
Academic Committee
Communications Committee
Environment Committee
Food Committee
Other Half Committee
Pastoral Committee
Societies and Services Committee
Works Committee
Health and Safety Committee
Sports Committee
Housemasters
HoDs
'''

When I re-run the import script after this, it seems to feel the need to add and remove some resources for duty events.  Why?  Could it be the housemasters?  Why does it not think this is the same group?  Does it do it again if I run it a second time?  No - seems to have been a one-off.  Try re-loading the database, and see if it happens before I change the group ownership.  Hang on - is this the correct Duties file?  No it isn't - which would explain a lot.  Why isn't it?  Ah - because it's a symbolic link and the file it links to doesn't have a .yml extension, so didn't get copied down from mach2 to my test system.  Should rename those files.

Seems ready for the live system.  Let's give it a go.  Done.

And so the next thing to implement is the approvals process for entering events.

==== General overview. ====

If an element has an owner, then it can't be added to an event without the owner's consent.  Instead a tentative commitment is created which the owner can later approve.

How do we check for groups?  If I add a group to an event, and all the elements of the group have owners, then arguably I need approval for all of them before I can add the group.  That is potentially very complicated.

We also need to be able to create some commitments without the owner's approval.

Perhaps for now I should stick to just a few elements having owners.

Nick's spaces
Reception's meeting rooms.
DJD's calendar
The sports venues (controlled by Sports Hall staff)

For now we won't have the ownership record set on staff elements.
