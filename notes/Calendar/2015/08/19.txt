Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2015-08-19T07:43:59+01:00

====== Wednesday 19 Aug 2015 ======

What about implementing Gap processing to the new Properties model?

ISTR I currently import some gaps (lesson suspensions) from SB, and then I have a few more specified by way of a file.  I really want to be able to put the Gap property on any event and have that cause a suspension of lessons.

To cope with different year groups, I propose to compile a list of all students involved in a Gap event, reduce them to a list of their years, and then suspend all lessons for those year groups for the relevant period.  Just one student in a given year will be enough to cause suspension for that year group.  If no students are associated with a Gap event, then all years will be suspended.

How much of the necessary code exists already?  We have a file called "extra_suspensions.yml" which contains some suspensions for particular year groups.  It's read in along with all the other files.  Then the data item from SB is an SB_SuspendedLesson record.

The current processing for these records assume that a year group will be provided.  I can therefore either create up to 7 of these records (one for each year group) for a single gap, or I can enhance the model to allow the year group to be blank (in which case it will apply to all years).  I incline towards the latter, although there aren't that many gaps anyway.

Interestingly, I already have a method called find_gaps, but I'm not sure whether it actually does anything.  Ah, yes - gaps are processed, and they're done separately from suspensions.  Should I merge these?

Ah - a subtle difference.  Suspensions leave the lessons in the database, but marked as non-existent.  We can then tell that they used to be there.  They appear in grey in people's timetables.  Gaps on the other hand completely remove the lesson.  My initial thought is that I want to retain this behaviour.

Note that currently, Gaps have no year group specified - they apply to the whole school - whilst Suspensions have to have a year group specified.  The processing for them is quite separate, although they have characteristics in common.

I can convert my existing code - which uses an event category of "Gap" - to use the new property quite easily, but is it going to do all I need?  Just check that it works at all first, with a fresh copy of last night's data.

Interesting point - the start of term service currently has a start time, but no duration.  It thus kills just lessons in period 3, and not 4.  Correct working though.  Test again after giving it a duration which extends into period 4.

Now, do I need to extend gap functionality to individual years?  Do I want to merge the two kinds of processing, or at least give them some common code?

Suspensions also have a filter of SUSPENDABLE_TYPES.  Are these relevant to gaps?  Suspendable types are:

* Lesson
* Registration
* Tutor period

What else was I trying to guard against here?

Thought - there are two types of Suspension and I'm not sure I fully cope with them at present.  SB certainly doesn't understand the difference.

When boys are on study leave, everything gets removed - registrations included.

When boys are in internal exams, their lessons are suspended, but registration still happens.

Both of these count as suspensions, because we still want the lessons to appear in the database, albeit greyed out.

Could I always use the greyed out option, even for gaps.  They would express "This is what would happen, if it were happening".  They wouldn't appear in ical feeds - that is the way it currently works.  The only way you'd see them is by looking at the Scheduler display.  One would be able to see what lessons one was missing because of, for instance, a school service, or school athletics.  Might be useful.  One probably doesn't want to see what lessons one is missing due to INSET, but those are generally done not by gaps but by having no week letter then.

Tempting thought - both Gaps and Suspensions are done the same way, and always lead to shadow lessons.

Hah - I've a vague feeling that extra suspensions on a day-by-day basis.  They have a start date and an end date, plus a start time and an end time, but the times are evaluated in the context of each day.  Thus one can have a multi-day suspension which starts at 09:00 each day, avoiding suspending registration.  Is that a correct recollection?  Yes, it is.  Good.

I could of course offer both through two different properties - Gaps and Lesson suspensions. Gaps stop them existing entirely; lesson suspensions make them greyed out.  Do I need that much versatility?

If I keep the current time processing, it might surprise someone who entered a multi-day gap.  Could have two types with different characteristics.

Regardless, I think the processing should be merged.  SB_SuspendedLesson should cope with:

* Year groups specified or not
* More than one year group specified
* Times by day or not (09:00 to 15:00 on each day, or 09:00 on one day to 15:00 on another)
* Remove lesson entirely or just grey it out

Now, what other kind of events might I get in the timetable from SB apart from the 3 listed above?  Potentially I can have Assembly, Chapel, and Meeting on top of those.

Just noticed a slight error.  Since tutor periods have changed their time, I am no longer recognising them.  Need to add in 14:05 to 14:35 as a tutor period time.  When do sixth formers have them?  Seems to be the same time.  Done.  Do pupils ever have events of category "meeting"?  I don't think so.  Surely Chapel should be in the suspendable list?  As should assembly.  Assemblies have mixed year groups, so won't get suspended for single year suspension - only for global suspensions (no year specified).

I need to make SB_SuspendedLesson a more encapsulated object, hiding the fields which come directly from SB and providing new methods which do more of the work.

Before I start, let's tidy up what's already there (since it will do for now) and commit it.  Then start a branch to do the new development on.

What changes do I have?

* One extra time correction (for tutor periods)
* Some more suspendable types
* Source_id on tutorgroups (to stop error message crashing loader)
* Gaps identified by property instead of event category.

Shove those in and release.  Running the import script on the live system to adjust the registration times and take account of our one current gap.  Need to find out from DJD how long the service lasts (although he hates giving end times to things).

Should probably take that data and import it to Markbook too.  Do a test on my system first.

Just taken a look at DJD's programme for the start of term.  It definitely does need the by-year functionality of gaps.  I can do that at the moment with my extra_suspensions file, but it would be much better done through the web interface.  Oddly, the chapel service has accidentally come out right(ish) because pupils are meant to go to lesson 4, although it is billed to start late.  It will start very late!  Once I've tested markbook data loading, I will start a new branch and get going.

Done that.  New branch.  My existing slurp method (for reading in SB's CSV file) does the following for each entry.

* Create a new object
* Assigns each of the provided values to the configured field
* Calls adjust() on the new object
* Calls wanted?() to establish whether the object wants to carry on existing

It also defines accessor methods for each of the fields to which it might assign a value.  Happily, in the case of the SB_SuspendedLesson object, I don't think I use any of them directly later.  They all need translating.

Actually, I think I can sensibly store the hard/soft information by where I put the record.  Hard ones go in one array, soft in the other.

Suspensions arrive from SB with a year ident, which I need to look up to find out the actual year group.  Ah, no I don't.  All my processing is done using SB's year idents.  How do those map to actual year groups?  Ah yes, the SB_Year record has year_ident and year_num, the latter being the national curriculum year number - 7 for the 1st year, 8 for the 2nd year etc.  My brain is turning to mush trying to follow all this.

Having thought on it a while, I think my best bet is probably to define a new object - say, Hiatus - which implements all the storage and checking, then sub-class it to provide SB_SuspendedLesson, or use it raw for my own stuff.  Does that actually buy me anything - apart perhaps from a little opportunity for clear thinking?

We need two different ways of storing the duration of a gap.  It either has a start and end time, or it has start and end dates, and times within those dates.  It should include validation code to enable easy checking.

As far as possible, clients should not access the Hiatus's data - they should ask questions of it as to whether the Hiatus is applicable.

I think I //might// have re-implemented the existing functionality using gaps.  Now test it.  Of course I don't have any meaningful suspensions from SB, but I could put one in my extras file.  See if it runs at all first.

I can also edit the data file coming from SB - that would be a more realistic test.  Anyway, my first problem is that it thinks that file is empty.  Why?  My code for checking completeness must be rejecting them all.  Further, why?  Was initialising my Hiatus for an SB_SuspendedLesson as not being times-by-day.  Fixed that.  Now running for longer.

An early bit of extra functionality which I should be able to add is to read of year idents from Gaps in the database, add them to the gap records, then apply gaps selectively to lessons.  I'll need to do a bit of a reverse lookup to find the right year_ident, since I don't use those.

That's interesting - it says it re-categorized 2550 atomic timetable events.  Is this a case of doing it repeatedly?  No, it just did it the once.  What did it do and why?  I thought I had already run the bit which re-categorised the tutor periods.
