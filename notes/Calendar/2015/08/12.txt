Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2015-08-12T08:59:41+01:00

====== Wednesday 12 Aug 2015 ======

Back from a short trip to Preston, and needing to start work on importing next year's data - OTL has finally managed to get at least some of it into SB.

Before I do that, I think I should re-test the conversion of the live system (using the staging server) and then do the actual live conversion.  Instructions for the process are in the calendar for [[:Calendar:2015:08:04|4th August]]. I have made a few small changes to the code since I last ran them, so I'll do them again now on the staging server.

In fact, to be really cautious, I should do it on the development server first.  OK - back to the master branch and here we go.

Check that I can still get a calendar feed from the staging server into Google Calendar.  Yes, I can.

I have just done some very nasty frigging of the appearance of the concerns in the left hand column.  Zurb Foundation by default makes them far too big, and only seems to provide the means to change them for //all// tables.  I want to change just that one table, which probably shouldn't be a table anyway.  The whole area needs a complete re-work so for now I'm just going to do this.  I feel soiled.

OK - think the moment has come to promote the live system.  Just in case I need to revert, what version of software is it currently running?

'''
commit 22e3963e9b2fc1903ff7a38370e3e964067521e0
Author: John Winters <john@sinodun.org.uk>
Date:   Wed Jul 29 09:52:46 2015 +0100

    Corrected some typos in the documentation.
'''


Good.

Typing in all DJD's twilight meetings for the term - then I'll do his key dates for the year.

Done all David's dates.  It occurs to me that, as tomorrow is results day, I really need to break off and start looking at the results import process again.  It may have rusted.  The end-of-year rollover will have to wait a little while.

OK - back on the end_of_year branch and ready to try it out.  I need a copy of the live database as it now stands in order to have a known starting point.  I also need some slightly old data files from SB in order to tidy up my groups.  I have a set from 20150703 which are the last I loaded.

[ ] Get latest code
[ ] Load live database
[ ] rake db:migrate

System should now run with a copy of the live data.  Yes - it seems to.

[ ] Create a perpetual era.
[ ] Set it as the perpetual era in the system settings.
[ ] Make sure you have the old extra group yml files
[ ] Unpack the 3rd July SB files and run the import script.
[ ] Run Setting.first.end_of_era to move to a new era.
[ ] Create a new era for Academic Year 2016/17 and set as next era.
[ ] Unpack the latest SB files, make sure you have the new extra group yml files and run import again.

Let's see if I get any further this time.

Hey - I've got some lessons!  Incroyable!  One of my teaching groups has a very odd name, but it's better than nothing.  It's a funny name in SB too, so almost certainly not my fault.  Total run time was 27m 41s.  Let's take a close look at the output file.

A few pupil amendments.  Lots of new ones.  Lots left.

Quite a few staff are marked as no longer doing cover, but I don't seem to have detected that they've left.  Should I be able to detect that?

4 members of staff have been deleted completely.  I'm not sure I want this - historic records should be kept, although none of these would have any.  They are:

* David Wickes
* Jayne Jennings
* Nezete Onen
* Dale Pimm

Check the processing here.  Actually, Nezete Onen should have some data records.

17 new staff records have been created.  26 new locations too.  80 new tutor groups.  Lots of pupils added to tutor groups and teaching groups.  Lots of adjustments to the calculated groups too.

Added 1485 duty events.  Ah - these are out of date.  Need the new schedule from Mark.

Let's run it a second time, keeping the original output file, and see how much faster it is.  5m 34s.

Things to look at:

[ ] Can we identify leaving staff and mark them as no longer current (but still active to retain the historic record)?
[ ] Why did 4 staff get deleted?

Answer to first question - the data in SB are simply wrong.  When the staff are correctly marked in SB as having left then we will mark them as no longer current.

Second question - they seem to have been deleted from SB.  Arguably this shouldn't happen, but I think that we should do slightly more intelligent programming.  If the staff member is active and has anything else attached to its element record it should not be deleted but marked as not current.  If the staff member is not active then he or she may be deleted.

How are tag groups stored in SB?  It might be useful if I could export them automatically.  I think I would need the Tags and PupTag tables exported as CSV files.  Might try it.
