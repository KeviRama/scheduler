Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2015-11-19T09:02:08+00:00

====== Thursday 19 Nov 2015 ======

I'm going to interrupt the developments of the last few days to do some work on user permissions.  DJD has requested that a couple of pupils should have access to facilities normally available only to staff.  For this reason I think it would make sense to add permission flags for various things.  I can then initialise these to suitable values, then later edit them, rather than relying on implicit permissions as at present.  Students will not normally have the requested permission, but these two will.

[*] Add permission flags to user record
[*] Maintenance method to set initial values
[*] Means to edit them
[*] su facility for admin
[*] Switch at least some of the code to use the flags instead of implicit
[*] Stop people who can't add resources from being able to delete the calendar (students)
[*] Fix problem when an inactive member of staff tries to log on.  Make it so they will succeed at a subsequent attempt.
[*] Stop an admin user from being able to remove his own admin bit.

Flags I've thought of so far:

[*] Create and edit events
[*] Create and edit groups
[*] Use the free finder
[*] Add arbitrary resources to one's view
[*] Become another user

That last one is really intended only for testing purposes - I may disable it on production systems.

I could possibly do to delete some old branches on Midnight - there are getting to be rather a lot.  Found a magic command to get rid of branches which have been deleted at http://stevenharman.net/git-clean-delete-already-merged-branches

''git branch --merged | grep -v \* | xargs -n 1 git branch -d''

Which asks git which branches have been merged, removes the "* master" one, then deletes all the others.  Done that.

I already have the following permission flags:

* admin - system administrator
* editor - can create and edit events
* privileged - can choose privileged event categories
* public_groups - can create publicly visible groups

And then these booleans to keep track of stuff

* arranges_cover - gets e-mails about cover issues
* secretary - enters events on behalf of others.  Don't auto-fill organiser field
* show_calendar - now redundant.  Used to control visibility of calendar
* show_owned - are the user's own events currently visible
* element_owner - owns at least one element
* email_notification - wants e-mails about pending approvals

which seems to leave the following to add

* can_has_groups
* can_find_free
* can_add_resources
* can_su

And I should be able to get rid of show_calendar at the same time.

Done all that and putting it onto the staging server.  I'll get Carl and Hugh to test it there.

Usual steps:

[ ] Fresh backup of live database
[ ] Reload
[ ] export RAILS_ENV=production
[ ] Fetch new code "git fetch origin permission_flags; git checkout permission_flags"
[ ] rake [[db:migrate]]
[ ] rails c; User.set_initial_permissions
[ ] touch tmp/restart.txt

And take a look at it.
