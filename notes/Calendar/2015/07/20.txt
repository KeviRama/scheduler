Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2015-07-20T09:09:35+01:00

====== Monday 20 Jul 2015 ======

OK - let's think about actually creating my new Concern model.  I will create just the model and database record to start with, then migrate over functionality from the existing Interests controller.  Live migration will need to happen in two stages - a release which adds the Concern model and migrates over all the existing records, then a later release which drops the two now redundant tables.

Damn!  I've just realised that Rails uses the word "concern" with a special meaning.  Will it clash with my model?  I don't think so.  I'll press on, and if problems arise later then I will rename it.

Now, my model needs some connections and some validation code.  Interestingly, it appears that the existing Interest model has no such validation code, and so it's perfectly possible for someone to have two interests in the same thing.  Stop that happening in the future.

Converted the data - now need to convert any code which accesses the old data records.  Ownerships have always been created manually, but Interests are created by end users.

I should enhance my code to provide a visual way of editing users too - including setting up ownerships.  Let's start by getting event display working again though - now using my new records.

Now currently, the event display code lumps elements which the user owns in with his general event display.  This is useful in preventing duplicate displays, but doesn't lend itself to the user being able to turn the visibility on and off.  I think I need to make all such things explicit.  The only things which you get if you don't specify an element id are the events which the user owns or is listed as the organiser for.  It should also be possible to toggle these on and off - later.

Note that we no longer show all the events in a user's preferred_event_category.  That was a frig to get calendar events displayed for Karen et al.  We now move to a show_calendar flag, and will subsequently move to selecting by element.

Display seems to be working, but of course all the events for my own element have disappeared.  These should now be requested explicitly by the front end.

Got things basically flipping - wonderful.  One slight problem is that if a user is logged on twice then the ticks and what have you will get out of step on the two instances.  A simple reload will cure it though.  Once I switch to using Backbone, it should be possible to make updates on one screen affect the other (or I could have separate session-related settings).
