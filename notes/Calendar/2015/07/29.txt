Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2015-07-29T09:57:03+01:00

====== Wednesday 29 Jul 2015 ======

Today's objective is to start work on the Calendar As Resource change again.  First step is to check out the branch and merge the current master with it.  This results in three files with clashes.

app/assets/javascripts/scheduler.js.coffee
app/controller/scheduler_controller.rb
db/schema.rb

I need to fix each of these and then re-commit.  I believe I will also need to rename the database migration which belongs to this change so that it happens //after// all the new ones in the main stream.  Change the date to today.

Refresh my memory on how to handle merge clashes.  It seems straightforward enough - you manually edit the indicated file, choosing the version which you want, then re-stage it and commit it.  In the file, each clash is highlighted with both versions given.  The first version is the version on your current branch, whilst the second one is the version from the master branch.  Let's try it.

In the Javascript file I seem to have made an early attempt to implement the tick boxes, using a class of "clicky".  I have since done this properly, so let's get rid of the "clicky" stuff.  I also need to get rid of it in the view.  Actually, I don't need to get rid of it in the view because it occurs only in the Interest and Ownership views, which are about to be deleted anyway.  I probably should for tidiness though.

Useful tip - when you're on a branch like this, if you just do a "''git diff <filename>''" it merely compares it with the currently committed one in the branch, which may well be the same.  Often you want to see how it's change //in this branch//, in which case just type "''git diff master <filename>''".  You can substitute any other identifier, like a tag or a hex signature as well.

Done the clicky stuff - got rid of it.

Another useful tip.  When you've done this sort of thing, it can then be useful to know how your final version differs from the master which you're thinking of merging it back with.  If you type:

''$ git diff --name-only master''

then you get a list of all the files which have changed relative to the current master branch.

In ''db/schema.rb'' the only difference is the version number.  20150331175206 seems to be the one from my branch, which should tell me which migration to rename.  I think perhaps there are two to convert - creating properties and creating services.  Check the ones either side to make sure they are already in the mainstream.  Actually - I can check that with the "''git diff ...''" command above.  Yes, they are.  Edit db/schema.rb to have the date stamp from the master branch, then convert those two migrations into a single one dated today.

With all those changes done, the list of files which differ from the master branch is now:

'''
app/models/eventcategory.rb
app/models/property.rb
app/models/service.rb
app/views/events/_resource.html.erb
app/views/ownerships/_ownership.html.erb
notes/Calendar/2015/03/18.txt
test/fixtures/properties.yml
test/fixtures/services.yml
test/models/property_test.rb
test/models/service_test.rb
'''


Actually, there's very little there apart from the introduction of the two new types of element.  Let's package that into a commit and test it to see if it works.  May well need to drop the two tables first.  It seems to convert the d/b OK.  Now need to create the Calendar property.

Now, Karen is very used to things defaulting to the Calendar category.  Therefore, when she creates an event it should default to having the Calendar property attached to it.  This can only happen once the event has been created, so I'll need to put it in the code there.

I can't just say that if you own a resource then it automatically gets attached, because Nick owns lots of resources.  I could perhaps frig it and say that it only happens for properties, but a proper fix is to add another flag to the Concern record.  auto_add or something like that.

Things to do:

[*] Convert all existing Calendar events to have the calendar property
[*] Convert all existing Key date (external) events to have calendar and Key date
[*] Convert all existing Key date (internal) events to have Key date
[*] Convert all week letters to have the Calendar and Key date properties
[*] Stop Calendar and Key date from being offered as event categories (although they'll have to continue to exist for now.)
[*] Convert display code to use properties rather than categories.
[*] Auto-add calendar property for Karen (and others?)
[ ] Remove any preferred event categories of Calendar. Replace by ownership of Calendar property.
[ ] Make ical feed understand Calendar and Key date properties - reverse compatibility
[ ] Likewise the days controller for DJD's downloads
[ ] Update documentation
[ ] Propagate to staging server
[ ] Allow elements to have a preferred colour, and make Calendar's green.  Also colour for key dates.
[ ] Need some way to allow Week letters to appear without needing to see the whole calendar.  This could perhaps be by way of key dates.
[ ] Perhaps new users should default to having a couple of concerns - Key dates (checked) and Calendar (not checked).
[ ] It's a bit weird having events appear twice when selected by Property Element.  Might need to re-think these.

Started with:

3240 events in Calendar category
102 events in week letter category
21 events in Key date (internal) category
23 events in Key date (external) category

Ended with:

3365 commitments to Calendar property (3240 + 102 + 23)
146 commitments to Key date property (102 + 21 + 23)

Excellent.

Now how do I stop particular categories being offered as options on the event editing dialogue.  I'm inclined to add a "deprecated" flag.  Any category with that flag set won't be in the list, and it won't be possible to save an event with that category.

At the same time I can add an "auto_add" flag to a Concern record, to say that a given Element should be automatically added to each new event created.  Done those.

Now make my old categories deprecated, and stop them appearing in the picker list.  Then stop them saving.

Interestingly, "Week letter" needs to stay as a category, because it describes what it contains.  It now gets its characteristics from the attached properties though.  We perhaps want a "Key date" category too.  Or should it be called "Term date"?

Interesting interface problem.  If you remove "Calendar" from the list of available event categories then it doesn't appear in the pop-down list for an existing event, even if that event's category is in fact "Calendar".  This will really confuse people.

I think I need it to appear if the event already has a category of Calendar, but not otherwise.  Even though it appears, it should refuse to save.  Once it's been changed, it won't come back.  Done that - seems to work.

Interesting point examining DJD's list of key dates for the coming year.  To my mind, key dates are those which matter to everybody and should always appear on your schedule.  Some of DJD's fit this definition, but others don't.  Start end end dates of terms are definitely in.  Parents' evenings are possibly in (although they can be handled more precisely, and targeted on just the relevant teachers), whilst things like "Head's reception for 1st years" really don't.  They are presumably important to DJD, but they're irrelevant to most staff.

I may need to abandon the term "Key date" to DJD and invent a new one meaning, "Relevant to all staff".

Now let's look at ical feeds.  What do I currently recommend to users?  What does the calendar currently use?

http://abingdon.scheduler.org.uk/ical/jhw

Events involving me, plus key dates.  All one feed.

http://abingdon.scheduler.org.uk/ical/10375

Events involving the indicated element - in this case me.  All categories listed as being available to ical.

http://abingdon.scheduler.org.uk/ical/0

This gets more interesting.  It's //documented// as providing key dates.  What it actually does by default is provide all events in categories which are flagged as being "for_users".  Currently that's:

* Gaps (visible)
* Key dates (both kinds)
* Week letters

The user can subtract categories from this list, or replace it with his own list, provided they are available for ical download.  If the user reduces the list to empty then it reverts to what it started as.  The school calendar currently uses the link:

http://abingdon.scheduler.org.uk/ical/0?categories=Calendar,Week%20letter

and this link must continue to work as at present, even if I do a bit of messing around to achieve it.

There are then modifiers which can be added to these.  As far as I know, I'm currently the only person who uses them extensively.
