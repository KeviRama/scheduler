<%= form_for(@property) do |f| %>
  <% if @property.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@property.errors.count, "error") %> prohibited this property from being saved:</h2>

      <ul>
      <% @property.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="row">
    <div class="small-12 medium-4 columns">
      <div class="field">
        <%= f.label :name %><br>
        <%= f.text_field :name, :class => "focus_please" %>
      </div>
    </div>
    <%=
      flag_group(f, 12, 5, "Flags",
                 [
                   {
                     field: :current,
                     prompt: "Current",
                     annotation: "Is this property to be available for adding to events?"
                   },
                   {
                     field: :make_public,
                     prompt: "Make public",
                     annotation: "Should this property cause its events to be publicly visible?"
                   },
                   {
                     field: :auto_staff,
                     prompt: "Auto staff",
                     annotation: "Should new staff users get these events shown by default?"
                   },
                   {
                     field: :auto_pupils,
                     prompt: "Auto pupils",
                     annotation: "Should new pupil users get these events shown by default?"
                   },
                   {
                     field: :feed_as_category,
                     prompt: "Feed as category",
                     annotation: "When generating an ICAL feed, should this property be included in the list of categories sent for events to which it is attached?"
                   },
                   {
                     field: :locking,
                     prompt: "Locking",
                     annotation: "If a request for this property is approved, should that then lock the parent event?"
                   },
                   {
                     field: :force_colour,
                     prompt: "Force colour",
                     annotation: "Should this property force its preferred colour onto events?"
                   }
      ])
    %>
    <div class='small-12 medium-3 columns'>
      <%= f.label :edit_preferred_colour, "Preferred colour" %>
      <%=
        f.hidden_field(:edit_preferred_colour,
                       :id => :colour_picker,
                       "data-default-colour" => @property.edit_preferred_colour,
                       "data-allow-empty" => true) %>
      <%= f.label :force_weight, "Weight of colour", title: "If more than one colour is forced, the weightiest wins out." %>
      <%= f.number_field(:force_weight, min: 0, max: 999, title: "If more than one colour is forced, the weightiest wins out.") %>
    </div>
  </div>
  <div class="actions">
    <%= f.submit @property.id ? "Update" : "Create", class: 'zfbutton tiny radius' %>
    <%= link_to 'Cancel', properties_path, class: 'zfbutton tiny radius button-link' %>
  </div>
<% end %>
